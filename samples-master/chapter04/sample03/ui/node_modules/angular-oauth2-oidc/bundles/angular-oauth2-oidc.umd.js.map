{"version":3,"file":"angular-oauth2-oidc.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng://angular-oauth2-oidc/types.ts","ng://angular-oauth2-oidc/base64-helper.ts","ng://angular-oauth2-oidc/token-validation/validation-handler.ts","ng://angular-oauth2-oidc/url-helper.service.ts","ng://angular-oauth2-oidc/events.ts","ng://angular-oauth2-oidc/auth.config.ts","ng://angular-oauth2-oidc/encoder.ts","ng://angular-oauth2-oidc/token-validation/hash-handler.ts","ng://angular-oauth2-oidc/oauth-service.ts","ng://angular-oauth2-oidc/oauth-module.config.ts","ng://angular-oauth2-oidc/interceptors/resource-server-error-handler.ts","ng://angular-oauth2-oidc/interceptors/default-oauth.interceptor.ts","ng://angular-oauth2-oidc/token-validation/null-validation-handler.ts","ng://angular-oauth2-oidc/factories.ts","ng://angular-oauth2-oidc/angular-oauth-oidc.module.ts","ng://angular-oauth2-oidc/token-validation/jwks-validation-handler.ts","ng://angular-oauth2-oidc/tokens.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n\r\n/**\r\n * Additional options that can be passed to tryLogin.\r\n */\r\nexport class LoginOptions {\r\n  /**\r\n   * Is called, after a token has been received and\r\n   * successfully validated.\r\n   *\r\n   * Deprecated:  Use property ``events`` on OAuthService instead.\r\n   */\r\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\r\n\r\n  /**\r\n   * Hook, to validate the received tokens.\r\n   *\r\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\r\n   */\r\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise<any>;\r\n\r\n  /**\r\n   * Called when tryLogin detects that the auth server\r\n   * included an error message into the hash fragment.\r\n   *\r\n   * Deprecated:  Use property ``events`` on OAuthService instead.\r\n   */\r\n  onLoginError?: (params: object) => void;\r\n\r\n  /**\r\n   * A custom hash fragment to be used instead of the\r\n   * actual one. This is used for silent refreshes, to\r\n   * pass the iframes hash fragment to this method, and\r\n   * is also used by popup flows in the same manner.\r\n   * This can be used with code flow, where is must be set\r\n   * to a hash symbol followed by the querystring. The\r\n   * question mark is optional, but may be present following\r\n   * the hash symbol.\r\n   */\r\n  customHashFragment?: string;\r\n\r\n  /**\r\n   * Set this to true to disable the oauth2 state\r\n   * check which is a best practice to avoid\r\n   * security attacks.\r\n   * As OIDC defines a nonce check that includes\r\n   * this, this can be set to true when only doing\r\n   * OIDC.\r\n   */\r\n  disableOAuth2StateCheck?: boolean;\r\n\r\n  /**\r\n   * Normally, you want to clear your hash fragment after\r\n   * the lib read the token(s) so that they are not displayed\r\n   * anymore in the url. If not, set this to true. For code flow\r\n   * this controls removing query string values.\r\n   */\r\n  preventClearHashAfterLogin? = false;\r\n\r\n  /**\r\n   * Set this for code flow if you used a custom redirect Uri\r\n   * when retrieving the code. This is used internally for silent\r\n   * refresh and popup flows.\r\n   */\r\n  customRedirectUri?: string;\r\n}\r\n\r\n/**\r\n * Defines the logging interface the OAuthService uses\r\n * internally. Is compatible with the `console` object,\r\n * but you can provide your own implementation as well\r\n * through dependency injection.\r\n */\r\nexport abstract class OAuthLogger {\r\n  abstract debug(message?: any, ...optionalParams: any[]): void;\r\n  abstract info(message?: any, ...optionalParams: any[]): void;\r\n  abstract log(message?: any, ...optionalParams: any[]): void;\r\n  abstract warn(message?: any, ...optionalParams: any[]): void;\r\n  abstract error(message?: any, ...optionalParams: any[]): void;\r\n}\r\n\r\n/**\r\n * Defines a simple storage that can be used for\r\n * storing the tokens at client side.\r\n * Is compatible to localStorage and sessionStorage,\r\n * but you can also create your own implementations.\r\n */\r\nexport abstract class OAuthStorage {\r\n  abstract getItem(key: string): string | null;\r\n  abstract removeItem(key: string): void;\r\n  abstract setItem(key: string, data: string): void;\r\n}\r\n\r\n@Injectable()\r\nexport class MemoryStorage implements OAuthStorage {\r\n  private data = new Map<string, string>();\r\n\r\n  getItem(key: string): string {\r\n    return this.data.get(key);\r\n  }\r\n\r\n  removeItem(key: string): void {\r\n    this.data.delete(key);\r\n  }\r\n\r\n  setItem(key: string, data: string): void {\r\n    this.data.set(key, data);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Represents the received tokens, the received state\r\n * and the parsed claims from the id-token.\r\n */\r\nexport class ReceivedTokens {\r\n  idToken: string;\r\n  accessToken: string;\r\n  idClaims?: object;\r\n  state?: string;\r\n}\r\n\r\n/**\r\n * Represents the parsed and validated id_token.\r\n */\r\nexport interface ParsedIdToken {\r\n  idToken: string;\r\n  idTokenClaims: object;\r\n  idTokenHeader: object;\r\n  idTokenClaimsJson: string;\r\n  idTokenHeaderJson: string;\r\n  idTokenExpiresAt: number;\r\n}\r\n\r\n/**\r\n * Represents the response from the token endpoint\r\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\r\n */\r\nexport interface TokenResponse {\r\n  access_token: string;\r\n  id_token: string; \r\n  token_type: string;\r\n  expires_in: number;\r\n  refresh_token: string;\r\n  scope: string;\r\n  state?: string;\r\n}\r\n\r\n/**\r\n * Represents the response from the user info endpoint\r\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\r\n */\r\nexport interface UserInfo {\r\n  sub: string;\r\n  [key: string]: any;\r\n}\r\n\r\n/**\r\n * Represents an OpenID Connect discovery document\r\n */\r\nexport interface OidcDiscoveryDoc {\r\n  issuer: string;\r\n  authorization_endpoint: string;\r\n  token_endpoint: string;\r\n  token_endpoint_auth_methods_supported: string[];\r\n  token_endpoint_auth_signing_alg_values_supported: string[];\r\n  userinfo_endpoint: string;\r\n  check_session_iframe: string;\r\n  end_session_endpoint: string;\r\n  jwks_uri: string;\r\n  registration_endpoint: string;\r\n  scopes_supported: string[];\r\n  response_types_supported: string[];\r\n  acr_values_supported: string[];\r\n  response_modes_supported: string[];\r\n  grant_types_supported: string[];\r\n  subject_types_supported: string[];\r\n  userinfo_signing_alg_values_supported: string[];\r\n  userinfo_encryption_alg_values_supported: string[];\r\n  userinfo_encryption_enc_values_supported: string[];\r\n  id_token_signing_alg_values_supported: string[];\r\n  id_token_encryption_alg_values_supported: string[];\r\n  id_token_encryption_enc_values_supported: string[];\r\n  request_object_signing_alg_values_supported: string[];\r\n  display_values_supported: string[];\r\n  claim_types_supported: string[];\r\n  claims_supported: string[];\r\n  claims_parameter_supported: boolean;\r\n  service_documentation: string;\r\n  ui_locales_supported: string[];\r\n}\r\n","// see: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_.22Unicode_Problem.22\r\nexport function b64DecodeUnicode(str) {\r\n  const base64 = str.replace(/\\-/g, '+').replace(/\\_/g, '/');\r\n\r\n  return decodeURIComponent(\r\n    atob(base64)\r\n      .split('')\r\n      .map(function(c) {\r\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n      })\r\n      .join('')\r\n  );\r\n}\r\n\r\nexport function base64UrlEncode(str): string {\r\n  const base64 = btoa(str);\r\n  return base64\r\n    .replace(/\\+/g, '-')\r\n    .replace(/\\//g, '_')\r\n    .replace(/=/g, '');\r\n}","import { base64UrlEncode } from '../base64-helper';\r\n\r\nexport interface ValidationParams {\r\n  idToken: string;\r\n  accessToken: string;\r\n  idTokenHeader: object;\r\n  idTokenClaims: object;\r\n  jwks: object;\r\n  loadKeys: () => Promise<object>;\r\n}\r\n\r\n/**\r\n * Interface for Handlers that are hooked in to\r\n * validate tokens.\r\n */\r\nexport abstract class ValidationHandler {\r\n  /**\r\n   * Validates the signature of an id_token.\r\n   */\r\n  public abstract validateSignature(\r\n    validationParams: ValidationParams\r\n  ): Promise<any>;\r\n\r\n  /**\r\n   * Validates the at_hash in an id_token against the received access_token.\r\n   */\r\n  public abstract validateAtHash(validationParams: ValidationParams): Promise<boolean>;\r\n}\r\n\r\n/**\r\n * This abstract implementation of ValidationHandler already implements\r\n * the method validateAtHash. However, to make use of it,\r\n * you have to override the method calcHash.\r\n */\r\nexport abstract class AbstractValidationHandler implements ValidationHandler {\r\n  /**\r\n   * Validates the signature of an id_token.\r\n   */\r\n  abstract validateSignature(validationParams: ValidationParams): Promise<any>;\r\n\r\n  /**\r\n   * Validates the at_hash in an id_token against the received access_token.\r\n   */\r\n  async validateAtHash(params: ValidationParams): Promise<boolean> {\r\n    let hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\r\n\r\n    let tokenHash = await this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\r\n\r\n    let leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\r\n\r\n    let atHash = base64UrlEncode(leftMostHalf);\r\n\r\n    let claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\r\n\r\n    if (atHash !== claimsAtHash) {\r\n      console.error('exptected at_hash: ' + atHash);\r\n      console.error('actual at_hash: ' + claimsAtHash);\r\n    }\r\n\r\n    return atHash === claimsAtHash;\r\n  }\r\n\r\n  /**\r\n   * Infers the name of the hash algorithm to use\r\n   * from the alg field of an id_token.\r\n   *\r\n   * @param jwtHeader the id_token's parsed header\r\n   */\r\n  protected inferHashAlgorithm(jwtHeader: object): string {\r\n    let alg: string = jwtHeader['alg'];\r\n\r\n    if (!alg.match(/^.S[0-9]{3}$/)) {\r\n      throw new Error('Algorithm not supported: ' + alg);\r\n    }\r\n\r\n    return 'sha-' + alg.substr(2);\r\n  }\r\n\r\n  /**\r\n   * Calculates the hash for the passed value by using\r\n   * the passed hash algorithm.\r\n   *\r\n   * @param valueToHash\r\n   * @param algorithm\r\n   */\r\n  protected abstract calcHash(valueToHash: string, algorithm: string): Promise<string>;\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class UrlHelperService {\r\n  public getHashFragmentParams(customHashFragment?: string): object {\r\n    let hash = customHashFragment || window.location.hash;\r\n\r\n    hash = decodeURIComponent(hash);\r\n\r\n    if (hash.indexOf('#') !== 0) {\r\n      return {};\r\n    }\r\n\r\n    const questionMarkPosition = hash.indexOf('?');\r\n\r\n    if (questionMarkPosition > -1) {\r\n      hash = hash.substr(questionMarkPosition + 1);\r\n    } else {\r\n      hash = hash.substr(1);\r\n    }\r\n\r\n    return this.parseQueryString(hash);\r\n  }\r\n\r\n  public parseQueryString(queryString: string): object {\r\n    const data = {};\r\n    let\r\n      pairs,\r\n      pair,\r\n      separatorIndex,\r\n      escapedKey,\r\n      escapedValue,\r\n      key,\r\n      value;\r\n\r\n    if (queryString === null) {\r\n      return data;\r\n    }\r\n\r\n    pairs = queryString.split('&');\r\n\r\n    for (let i = 0; i < pairs.length; i++) {\r\n      pair = pairs[i];\r\n      separatorIndex = pair.indexOf('=');\r\n\r\n      if (separatorIndex === -1) {\r\n        escapedKey = pair;\r\n        escapedValue = null;\r\n      } else {\r\n        escapedKey = pair.substr(0, separatorIndex);\r\n        escapedValue = pair.substr(separatorIndex + 1);\r\n      }\r\n\r\n      key = decodeURIComponent(escapedKey);\r\n      value = decodeURIComponent(escapedValue);\r\n\r\n      if (key.substr(0, 1) === '/') { key = key.substr(1); }\r\n\r\n      data[key] = value;\r\n    }\r\n\r\n    return data;\r\n  }\r\n}\r\n","export type EventType =\r\n  | 'discovery_document_loaded'\r\n  | 'jwks_load_error'\r\n  | 'invalid_nonce_in_state'\r\n  | 'discovery_document_load_error'\r\n  | 'discovery_document_validation_error'\r\n  | 'user_profile_loaded'\r\n  | 'user_profile_load_error'\r\n  | 'token_received'\r\n  | 'token_error'\r\n  | 'code_error'\r\n  | 'token_refreshed'\r\n  | 'token_refresh_error'\r\n  | 'silent_refresh_error'\r\n  | 'silently_refreshed'\r\n  | 'silent_refresh_timeout'\r\n  | 'token_validation_error'\r\n  | 'token_expires'\r\n  | 'session_changed'\r\n  | 'session_error'\r\n  | 'session_terminated'\r\n  | 'logout'\r\n  | 'popup_closed'\r\n  | 'popup_blocked';\r\n\r\nexport abstract class OAuthEvent {\r\n  constructor(readonly type: EventType) {}\r\n}\r\n\r\nexport class OAuthSuccessEvent extends OAuthEvent {\r\n  constructor(type: EventType, readonly info: any = null) {\r\n    super(type);\r\n  }\r\n}\r\n\r\nexport class OAuthInfoEvent extends OAuthEvent {\r\n  constructor(type: EventType, readonly info: any = null) {\r\n    super(type);\r\n  }\r\n}\r\n\r\nexport class OAuthErrorEvent extends OAuthEvent {\r\n  constructor(\r\n    type: EventType,\r\n    readonly reason: object,\r\n    readonly params: object = null\r\n  ) {\r\n    super(type);\r\n  }\r\n}\r\n","export class AuthConfig {\r\n  /**\r\n   * The client's id as registered with the auth server\r\n   */\r\n  public clientId? = '';\r\n\r\n  /**\r\n   * The client's redirectUri as registered with the auth server\r\n   */\r\n  public redirectUri? = '';\r\n\r\n  /**\r\n   * An optional second redirectUri where the auth server\r\n   * redirects the user to after logging out.\r\n   */\r\n  public postLogoutRedirectUri? = '';\r\n\r\n  /**\r\n   * The auth server's endpoint that allows to log\r\n   * the user in when using implicit flow.\r\n   */\r\n  public loginUrl? = '';\r\n\r\n  /**\r\n   * The requested scopes\r\n   */\r\n  public scope? = 'openid profile';\r\n\r\n  public resource? = '';\r\n\r\n  public rngUrl? = '';\r\n\r\n  /**\r\n   * Defines whether to use OpenId Connect during\r\n   * implicit flow.\r\n   */\r\n  public oidc? = true;\r\n\r\n  /**\r\n   * Defines whether to request an access token during\r\n   * implicit flow.\r\n   */\r\n  public requestAccessToken? = true;\r\n\r\n  public options?: any = null;\r\n\r\n  /**\r\n   * The issuer's uri.\r\n   */\r\n  public issuer? = '';\r\n\r\n  /**\r\n   * The logout url.\r\n   */\r\n  public logoutUrl? = '';\r\n\r\n  /**\r\n   * Defines whether to clear the hash fragment after logging in.\r\n   */\r\n  public clearHashAfterLogin? = true;\r\n\r\n  /**\r\n   * Url of the token endpoint as defined by OpenId Connect and OAuth 2.\r\n   */\r\n  public tokenEndpoint?: string = null;\r\n\r\n  /**\r\n   * Url of the userinfo endpoint as defined by OpenId Connect.\r\n   */\r\n  public userinfoEndpoint?: string = null;\r\n\r\n  public responseType? = '';\r\n\r\n  /**\r\n   * Defines whether additional debug information should\r\n   * be shown at the console. Note that in certain browsers\r\n   * the verbosity of the console needs to be explicitly set\r\n   * to include Debug level messages.\r\n   */\r\n   public showDebugInformation? = false;\r\n\r\n  /**\r\n   * The redirect uri used when doing silent refresh.\r\n   */\r\n  public silentRefreshRedirectUri? = '';\r\n\r\n  public silentRefreshMessagePrefix? = '';\r\n\r\n  /**\r\n   * Set this to true to display the iframe used for\r\n   * silent refresh for debugging.\r\n   */\r\n  public silentRefreshShowIFrame? = false;\r\n\r\n  /**\r\n   * Timeout for silent refresh.\r\n   * @internal\r\n   * depreacted b/c of typo, see silentRefreshTimeout\r\n   */\r\n  public siletRefreshTimeout?: number = 1000 * 20;\r\n\r\n  /**\r\n   * Timeout for silent refresh.\r\n   */\r\n  public silentRefreshTimeout?: number = 1000 * 20;\r\n\r\n  /**\r\n   * Some auth servers don't allow using password flow\r\n   * w/o a client secret while the standards do not\r\n   * demand for it. In this case, you can set a password\r\n   * here. As this password is exposed to the public\r\n   * it does not bring additional security and is therefore\r\n   * as good as using no password.\r\n   */\r\n  public dummyClientSecret?: string = null;\r\n\r\n  /**\r\n   * Defines whether https is required.\r\n   * The default value is remoteOnly which only allows\r\n   * http for localhost, while every other domains need\r\n   * to be used with https.\r\n   */\r\n  public requireHttps?: boolean | 'remoteOnly' = 'remoteOnly';\r\n\r\n  /**\r\n   * Defines whether every url provided by the discovery\r\n   * document has to start with the issuer's url.\r\n   */\r\n  public strictDiscoveryDocumentValidation? = true;\r\n\r\n  /**\r\n   * JSON Web Key Set (https://tools.ietf.org/html/rfc7517)\r\n   * with keys used to validate received id_tokens.\r\n   * This is taken out of the disovery document. Can be set manually too.\r\n   */\r\n  public jwks?: object = null;\r\n\r\n  /**\r\n   * Map with additional query parameter that are appended to\r\n   * the request when initializing implicit flow.\r\n   */\r\n  public customQueryParams?: object = null;\r\n\r\n  public silentRefreshIFrameName? = 'angular-oauth-oidc-silent-refresh-iframe';\r\n\r\n  /**\r\n   * Defines when the token_timeout event should be raised.\r\n   * If you set this to the default value 0.75, the event\r\n   * is triggered after 75% of the token's life time.\r\n   */\r\n  public timeoutFactor? = 0.75;\r\n\r\n  /**\r\n   * If true, the lib will try to check whether the user\r\n   * is still logged in on a regular basis as described\r\n   * in http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\r\n   */\r\n  public sessionChecksEnabled? = false;\r\n\r\n  /**\r\n   * Interval in msec for checking the session\r\n   * according to http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\r\n   */\r\n  public sessionCheckIntervall? = 3 * 1000;\r\n\r\n  /**\r\n   * Url for the iframe used for session checks\r\n   */\r\n  public sessionCheckIFrameUrl?: string = null;\r\n\r\n  /**\r\n   * Name of the iframe to use for session checks\r\n   */\r\n  public sessionCheckIFrameName? = 'angular-oauth-oidc-check-session-iframe';\r\n\r\n  /**\r\n   * This property has been introduced to disable at_hash checks\r\n   * and is indented for Identity Provider that does not deliver\r\n   * an at_hash EVEN THOUGH its recommended by the OIDC specs.\r\n   * Of course, when disabling these checks the we are bypassing\r\n   * a security check which means we are more vulnerable.\r\n   */\r\n  public disableAtHashCheck? = false;\r\n\r\n  /**\r\n   * Defines wether to check the subject of a refreshed token after silent refresh.\r\n   * Normally, it should be the same as before.\r\n   */\r\n  public skipSubjectCheck? = false;\r\n\r\n  public useIdTokenHintForSilentRefresh? = false;\r\n\r\n  /**\r\n   * Defined whether to skip the validation of the issuer in the discovery document.\r\n   * Normally, the discovey document's url starts with the url of the issuer.\r\n   */\r\n  public skipIssuerCheck? = false;\r\n\r\n  /**\r\n   * According to rfc6749 it is recommended (but not required) that the auth\r\n   * server exposes the access_token's life time in seconds.\r\n   * This is a fallback value for the case this value is not exposed.\r\n   */\r\n  public fallbackAccessTokenExpirationTimeInSec?: number;\r\n\r\n  /**\r\n   * final state sent to issuer is built as follows:\r\n   * state = nonce + nonceStateSeparator + additional state\r\n   * Default separator is ';' (encoded %3B).\r\n   * In rare cases, this character might be forbidden or inconvenient to use by the issuer so it can be customized.\r\n   */\r\n  public nonceStateSeparator? = ';';\r\n\r\n  /**\r\n   * Set this to true to use HTTP BASIC auth for password flow\r\n   */\r\n  public useHttpBasicAuth? = false;\r\n\r\n  /**\r\n   * The window of time (in seconds) to allow the current time to deviate when validating id_token's iat and exp values.\r\n   */\r\n  public clockSkewInSec?: number;\r\n\r\n  /**\r\n   * The interceptors waits this time span if there is no token\r\n  */\r\n  public waitForTokenInMsec? = 0;\r\n\r\n  /**\r\n   * Code Flow is by defauld used together with PKCI which is also higly recommented.\r\n   * You can disbale it here by setting this flag to true.\r\n   * https://tools.ietf.org/html/rfc7636#section-1.1\r\n   */\r\n  public disablePKCE? = false;\r\n\r\n  constructor(json?: Partial<AuthConfig>) {\r\n    if (json) {\r\n      Object.assign(this, json);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This property allows you to override the method that is used to open the login url,\r\n   * allowing a way for implementations to specify their own method of routing to new\r\n   * urls.\r\n   */\r\n  public openUri?: ((uri: string) => void) = uri => {\r\n    location.href = uri;\r\n  }\r\n}\r\n","import { HttpParameterCodec } from '@angular/common/http';\r\n/**\r\n * This custom encoder allows charactes like +, % and / to be used in passwords\r\n */\r\nexport class WebHttpUrlEncodingCodec implements HttpParameterCodec {\r\n  encodeKey(k: string): string {\r\n    return encodeURIComponent(k);\r\n  }\r\n\r\n  encodeValue(v: string): string {\r\n    return encodeURIComponent(v);\r\n  }\r\n\r\n  decodeKey(k: string): string {\r\n    return decodeURIComponent(k);\r\n  }\r\n\r\n  decodeValue(v: string) {\r\n    return decodeURIComponent(v);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Abstraction for crypto algorithms\r\n*/\r\nexport abstract class HashHandler {\r\n    abstract calcHash(valueToHash: string, algorithm: string): Promise<string>;\r\n}\r\n\r\n@Injectable()\r\nexport class DefaultHashHandler implements HashHandler {\r\n\r\n    async calcHash(valueToHash: string, algorithm: string): Promise<string> {\r\n        const encoder = new TextEncoder();\r\n        const data = encoder.encode(valueToHash);\r\n        const hashArray = await window.crypto.subtle.digest(algorithm, data);\r\n        return this.toHashString(hashArray);\r\n    }\r\n\r\n    toHashString(buffer: ArrayBuffer) {\r\n      const byteArray = new Uint8Array(buffer);\r\n      let result = '';\r\n      for (let e of byteArray) {\r\n        result += String.fromCharCode(e);\r\n      }\r\n      return result;\r\n    }\r\n\r\n    // hexString(buffer) {\r\n    //     const byteArray = new Uint8Array(buffer);\r\n    //     const hexCodes = [...byteArray].map(value => {\r\n    //       const hexCode = value.toString(16);\r\n    //       const paddedHexCode = hexCode.padStart(2, '0');\r\n    //       return paddedHexCode;\r\n    //     });\r\n      \r\n    //     return hexCodes.join('');\r\n    //   }\r\n    \r\n      // toHashString(hexString: string) {\r\n      //   let result = '';\r\n      //   for (let i = 0; i < hexString.length; i += 2) {\r\n      //     let hexDigit = hexString.charAt(i) + hexString.charAt(i + 1);\r\n      //     let num = parseInt(hexDigit, 16);\r\n      //     result += String.fromCharCode(num);\r\n      //   }\r\n      //   return result;\r\n      // }\r\n\r\n}","import { Injectable, NgZone, Optional, OnDestroy } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable, Subject, Subscription, of, race, from } from 'rxjs';\r\nimport { filter, delay, first, tap, map, switchMap, debounceTime } from 'rxjs/operators';\r\n\r\nimport {\r\n    ValidationHandler,\r\n    ValidationParams\r\n} from './token-validation/validation-handler';\r\nimport { UrlHelperService } from './url-helper.service';\r\nimport {\r\n    OAuthEvent,\r\n    OAuthInfoEvent,\r\n    OAuthErrorEvent,\r\n    OAuthSuccessEvent\r\n} from './events';\r\nimport {\r\n    OAuthLogger,\r\n    OAuthStorage,\r\n    LoginOptions,\r\n    ParsedIdToken,\r\n    OidcDiscoveryDoc,\r\n    TokenResponse,\r\n    UserInfo\r\n} from './types';\r\nimport { b64DecodeUnicode, base64UrlEncode } from './base64-helper';\r\nimport { AuthConfig } from './auth.config';\r\nimport { WebHttpUrlEncodingCodec } from './encoder';\r\nimport { HashHandler } from './token-validation/hash-handler';\r\n\r\n/**\r\n * Service for logging in and logging out with\r\n * OIDC and OAuth2. Supports implicit flow and\r\n * password flow.\r\n */\r\n@Injectable()\r\nexport class OAuthService extends AuthConfig implements OnDestroy {\r\n    // Extending AuthConfig ist just for LEGACY reasons\r\n    // to not break existing code.\r\n\r\n    /**\r\n     * The ValidationHandler used to validate received\r\n     * id_tokens.\r\n     */\r\n    public tokenValidationHandler: ValidationHandler;\r\n\r\n    /**\r\n     * @internal\r\n     * Deprecated:  use property events instead\r\n     */\r\n    public discoveryDocumentLoaded = false;\r\n\r\n    /**\r\n     * @internal\r\n     * Deprecated:  use property events instead\r\n     */\r\n    public discoveryDocumentLoaded$: Observable<OidcDiscoveryDoc>;\r\n\r\n    /**\r\n     * Informs about events, like token_received or token_expires.\r\n     * See the string enum EventType for a full list of event types.\r\n     */\r\n    public events: Observable<OAuthEvent>;\r\n\r\n    /**\r\n     * The received (passed around) state, when logging\r\n     * in with implicit flow.\r\n     */\r\n    public state?= '';\r\n\r\n    protected eventsSubject: Subject<OAuthEvent> = new Subject<OAuthEvent>();\r\n    protected discoveryDocumentLoadedSubject: Subject<OidcDiscoveryDoc> = new Subject<OidcDiscoveryDoc>();\r\n    protected silentRefreshPostMessageEventListener: EventListener;\r\n    protected grantTypesSupported: Array<string> = [];\r\n    protected _storage: OAuthStorage;\r\n    protected accessTokenTimeoutSubscription: Subscription;\r\n    protected idTokenTimeoutSubscription: Subscription;\r\n    protected tokenReceivedSubscription: Subscription;\r\n    protected sessionCheckEventListener: EventListener;\r\n    protected jwksUri: string;\r\n    protected sessionCheckTimer: any;\r\n    protected silentRefreshSubject: string;\r\n    protected inImplicitFlow = false;\r\n\r\n    constructor(\r\n        protected ngZone: NgZone,\r\n        protected http: HttpClient,\r\n        @Optional() storage: OAuthStorage,\r\n        @Optional() tokenValidationHandler: ValidationHandler,\r\n        @Optional() protected config: AuthConfig,\r\n        protected urlHelper: UrlHelperService,\r\n        protected logger: OAuthLogger,\r\n        @Optional() protected crypto: HashHandler,\r\n    ) {\r\n        super();\r\n\r\n        this.debug('angular-oauth2-oidc v8-beta');\r\n\r\n        this.discoveryDocumentLoaded$ = this.discoveryDocumentLoadedSubject.asObservable();\r\n        this.events = this.eventsSubject.asObservable();\r\n\r\n        if (tokenValidationHandler) {\r\n            this.tokenValidationHandler = tokenValidationHandler;\r\n        }\r\n\r\n        if (config) {\r\n            this.configure(config);\r\n        }\r\n\r\n        try {\r\n            if (storage) {\r\n                this.setStorage(storage);\r\n            } else if (typeof sessionStorage !== 'undefined') {\r\n                this.setStorage(sessionStorage);\r\n            }\r\n        } catch (e) {\r\n\r\n            console.error(\r\n                'No OAuthStorage provided and cannot access default (sessionStorage).'\r\n                + 'Consider providing a custom OAuthStorage implementation in your module.',\r\n                e\r\n            );\r\n        }\r\n\r\n        this.setupRefreshTimer();\r\n    }\r\n\r\n    /**\r\n     * Use this method to configure the service\r\n     * @param config the configuration\r\n     */\r\n    public configure(config: AuthConfig): void {\r\n        // For the sake of downward compatibility with\r\n        // original configuration API\r\n        Object.assign(this, new AuthConfig(), config);\r\n\r\n        this.config = Object.assign({} as AuthConfig, new AuthConfig(), config);\r\n\r\n        if (this.sessionChecksEnabled) {\r\n            this.setupSessionCheck();\r\n        }\r\n\r\n        this.configChanged();\r\n    }\r\n\r\n    protected configChanged(): void {\r\n        this.setupRefreshTimer();\r\n    }\r\n\r\n    public restartSessionChecksIfStillLoggedIn(): void {\r\n        if (this.hasValidIdToken()) {\r\n            this.initSessionCheck();\r\n        }\r\n    }\r\n\r\n    protected restartRefreshTimerIfStillLoggedIn(): void {\r\n        this.setupExpirationTimers();\r\n    }\r\n\r\n    protected setupSessionCheck(): void {\r\n        this.events.pipe(filter(e => e.type === 'token_received')).subscribe(e => {\r\n            this.initSessionCheck();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Will setup up silent refreshing for when the token is\r\n     * about to expire. When the user is logged out via this.logOut method, the\r\n     * silent refreshing will pause and not refresh the tokens until the user is\r\n     * logged back in via receiving a new token.\r\n     * @param params Additional parameter to pass\r\n     * @param listenTo Setup automatic refresh of a specific token type\r\n     */\r\n    public setupAutomaticSilentRefresh(params: object = {}, listenTo?: 'access_token' | 'id_token' | 'any', noPrompt = true): void {\r\n        let shouldRunSilentRefresh = true;\r\n        this.events.pipe(\r\n            tap((e) => {\r\n                if (e.type === 'token_received') {\r\n                    shouldRunSilentRefresh = true;\r\n                } else if (e.type === 'logout') {\r\n                    shouldRunSilentRefresh = false;\r\n                }\r\n            }),\r\n            filter(e => e.type === 'token_expires'),\r\n            debounceTime(1000),\r\n        ).subscribe(e => {\r\n            const event = e as OAuthInfoEvent;\r\n            if ((listenTo == null || listenTo === 'any' || event.info === listenTo) && shouldRunSilentRefresh) {\r\n                // this.silentRefresh(params, noPrompt).catch(_ => {\r\n                this.refreshInternal(params, noPrompt).catch(_ => {\r\n                    this.debug('Automatic silent refresh did not work');\r\n                });\r\n            }\r\n        });\r\n\r\n        this.restartRefreshTimerIfStillLoggedIn();\r\n    }\r\n\r\n    protected refreshInternal(params, noPrompt): Promise<TokenResponse | OAuthEvent> {\r\n\r\n        if (!this.silentRefreshRedirectUri && this.responseType === 'code') {\r\n            return this.refreshToken();\r\n        } else {\r\n            return this.silentRefresh(params, noPrompt);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convenience method that first calls `loadDiscoveryDocument(...)` and\r\n     * directly chains using the `then(...)` part of the promise to call\r\n     * the `tryLogin(...)` method.\r\n     *\r\n     * @param options LoginOptions to pass through to `tryLogin(...)`\r\n     */\r\n    public loadDiscoveryDocumentAndTryLogin(options: LoginOptions = null): Promise<boolean> {\r\n        return this.loadDiscoveryDocument().then(doc => {\r\n            return this.tryLogin(options);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Convenience method that first calls `loadDiscoveryDocumentAndTryLogin(...)`\r\n     * and if then chains to `initLoginFlow()`, but only if there is no valid\r\n     * IdToken or no valid AccessToken.\r\n     *\r\n     * @param options LoginOptions to pass through to `tryLogin(...)`\r\n     */\r\n    public loadDiscoveryDocumentAndLogin(options: LoginOptions & { state?: string } = null): Promise<boolean> {\r\n        if (!options) {\r\n            options = { state: '' };\r\n        }\r\n        return this.loadDiscoveryDocumentAndTryLogin(options).then(_ => {\r\n            if (!this.hasValidIdToken() || !this.hasValidAccessToken()) {\r\n                if (this.responseType === 'code') {\r\n                    this.initCodeFlow();\r\n                } else {\r\n                    this.initImplicitFlow();\r\n                }\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n    protected debug(...args): void {\r\n        if (this.showDebugInformation) {\r\n            this.logger.debug.apply(this.logger, args);\r\n        }\r\n    }\r\n\r\n    protected validateUrlFromDiscoveryDocument(url: string): string[] {\r\n        const errors: string[] = [];\r\n        const httpsCheck = this.validateUrlForHttps(url);\r\n        const issuerCheck = this.validateUrlAgainstIssuer(url);\r\n\r\n        if (!httpsCheck) {\r\n            errors.push(\r\n                'https for all urls required. Also for urls received by discovery.'\r\n            );\r\n        }\r\n\r\n        if (!issuerCheck) {\r\n            errors.push(\r\n                'Every url in discovery document has to start with the issuer url.' +\r\n                'Also see property strictDiscoveryDocumentValidation.'\r\n            );\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    protected validateUrlForHttps(url: string): boolean {\r\n        if (!url) {\r\n            return true;\r\n        }\r\n\r\n        const lcUrl = url.toLowerCase();\r\n\r\n        if (this.requireHttps === false) {\r\n            return true;\r\n        }\r\n\r\n        if (\r\n            (lcUrl.match(/^http:\\/\\/localhost($|[:\\/])/) ||\r\n                lcUrl.match(/^http:\\/\\/localhost($|[:\\/])/)) &&\r\n            this.requireHttps === 'remoteOnly'\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        return lcUrl.startsWith('https://');\r\n    }\r\n\r\n    protected assertUrlNotNullAndCorrectProtocol(url: string | undefined, description: string) {\r\n        if (!url) {\r\n            throw new Error(`'${description}' should not be null`);\r\n        }\r\n        if (!this.validateUrlForHttps(url)) {\r\n            throw new Error(`'${description}' must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).`);\r\n        }\r\n    }\r\n\r\n    protected validateUrlAgainstIssuer(url: string) {\r\n        if (!this.strictDiscoveryDocumentValidation) {\r\n            return true;\r\n        }\r\n        if (!url) {\r\n            return true;\r\n        }\r\n        return url.toLowerCase().startsWith(this.issuer.toLowerCase());\r\n    }\r\n\r\n    protected setupRefreshTimer(): void {\r\n        if (typeof window === 'undefined') {\r\n            this.debug('timer not supported on this plattform');\r\n            return;\r\n        }\r\n\r\n        if (this.hasValidIdToken() || this.hasValidAccessToken()) {\r\n            this.clearAccessTokenTimer();\r\n            this.clearIdTokenTimer();\r\n            this.setupExpirationTimers();\r\n        }\r\n\r\n        if (this.tokenReceivedSubscription)\r\n            this.tokenReceivedSubscription.unsubscribe();\r\n\r\n        this.tokenReceivedSubscription = this.events.pipe(filter(e => e.type === 'token_received')).subscribe(_ => {\r\n            this.clearAccessTokenTimer();\r\n            this.clearIdTokenTimer();\r\n            this.setupExpirationTimers();\r\n        });\r\n    }\r\n\r\n    protected setupExpirationTimers(): void {\r\n        if (this.hasValidAccessToken()) {\r\n            this.setupAccessTokenTimer();\r\n        }\r\n\r\n\r\n        if (this.hasValidIdToken()) {\r\n            this.setupIdTokenTimer();\r\n        }\r\n    }\r\n\r\n    protected setupAccessTokenTimer(): void {\r\n\r\n        const expiration = this.getAccessTokenExpiration();\r\n        const storedAt = this.getAccessTokenStoredAt();\r\n        const timeout = this.calcTimeout(storedAt, expiration);\r\n\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.accessTokenTimeoutSubscription = of(\r\n                new OAuthInfoEvent('token_expires', 'access_token')\r\n            )\r\n                .pipe(delay(timeout))\r\n                .subscribe(e => {\r\n                    this.ngZone.run(() => {\r\n                        this.eventsSubject.next(e);\r\n                    });\r\n                });\r\n        });\r\n    }\r\n\r\n    protected setupIdTokenTimer(): void {\r\n\r\n        const expiration = this.getIdTokenExpiration();\r\n        const storedAt = this.getIdTokenStoredAt();\r\n        const timeout = this.calcTimeout(storedAt, expiration);\r\n\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.idTokenTimeoutSubscription = of(\r\n                new OAuthInfoEvent('token_expires', 'id_token')\r\n            )\r\n                .pipe(delay(timeout))\r\n                .subscribe(e => {\r\n                    this.ngZone.run(() => {\r\n                        this.eventsSubject.next(e);\r\n                    });\r\n                });\r\n        });\r\n    }\r\n\r\n    protected clearAccessTokenTimer(): void {\r\n        if (this.accessTokenTimeoutSubscription) {\r\n            this.accessTokenTimeoutSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    protected clearIdTokenTimer(): void {\r\n        if (this.idTokenTimeoutSubscription) {\r\n            this.idTokenTimeoutSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    protected calcTimeout(storedAt: number, expiration: number): number {\r\n        const now = Date.now();\r\n        const delta = (expiration - storedAt) * this.timeoutFactor - (now - storedAt);\r\n        return Math.max(0, delta);\r\n    }\r\n\r\n    /**\r\n     * DEPRECATED. Use a provider for OAuthStorage instead:\r\n     *\r\n     * { provide: OAuthStorage, useFactory: oAuthStorageFactory }\r\n     * export function oAuthStorageFactory(): OAuthStorage { return localStorage; }\r\n     * Sets a custom storage used to store the received\r\n     * tokens on client side. By default, the browser's\r\n     * sessionStorage is used.\r\n     * @ignore\r\n     *\r\n     * @param storage\r\n     */\r\n    public setStorage(storage: OAuthStorage): void {\r\n        this._storage = storage;\r\n        this.configChanged();\r\n    }\r\n\r\n    /**\r\n     * Loads the discovery document to configure most\r\n     * properties of this service. The url of the discovery\r\n     * document is infered from the issuer's url according\r\n     * to the OpenId Connect spec. To use another url you\r\n     * can pass it to to optional parameter fullUrl.\r\n     *\r\n     * @param fullUrl\r\n     */\r\n    public loadDiscoveryDocument(fullUrl: string = null): Promise<OAuthSuccessEvent> {\r\n        return new Promise((resolve, reject) => {\r\n            if (!fullUrl) {\r\n                fullUrl = this.issuer || '';\r\n                if (!fullUrl.endsWith('/')) {\r\n                    fullUrl += '/';\r\n                }\r\n                fullUrl += '.well-known/openid-configuration';\r\n            }\r\n\r\n            if (!this.validateUrlForHttps(fullUrl)) {\r\n                reject('issuer  must use HTTPS (with TLS), or config value for property \\'requireHttps\\' must be set to \\'false\\' and allow HTTP (without TLS).');\r\n                return;\r\n            }\r\n\r\n            this.http.get<OidcDiscoveryDoc>(fullUrl).subscribe(\r\n                doc => {\r\n                    if (!this.validateDiscoveryDocument(doc)) {\r\n                        this.eventsSubject.next(\r\n                            new OAuthErrorEvent('discovery_document_validation_error', null)\r\n                        );\r\n                        reject('discovery_document_validation_error');\r\n                        return;\r\n                    }\r\n\r\n                    this.loginUrl = doc.authorization_endpoint;\r\n                    this.logoutUrl = doc.end_session_endpoint || this.logoutUrl;\r\n                    this.grantTypesSupported = doc.grant_types_supported;\r\n                    this.issuer = doc.issuer;\r\n                    this.tokenEndpoint = doc.token_endpoint;\r\n                    this.userinfoEndpoint = doc.userinfo_endpoint || this.userinfoEndpoint;\r\n                    this.jwksUri = doc.jwks_uri;\r\n                    this.sessionCheckIFrameUrl = doc.check_session_iframe || this.sessionCheckIFrameUrl;\r\n\r\n                    this.discoveryDocumentLoaded = true;\r\n                    this.discoveryDocumentLoadedSubject.next(doc);\r\n\r\n                    if (this.sessionChecksEnabled) {\r\n                        this.restartSessionChecksIfStillLoggedIn();\r\n                    }\r\n\r\n                    this.loadJwks()\r\n                        .then(jwks => {\r\n                            const result: object = {\r\n                                discoveryDocument: doc,\r\n                                jwks: jwks\r\n                            };\r\n\r\n                            const event = new OAuthSuccessEvent(\r\n                                'discovery_document_loaded',\r\n                                result\r\n                            );\r\n                            this.eventsSubject.next(event);\r\n                            resolve(event);\r\n                            return;\r\n                        })\r\n                        .catch(err => {\r\n                            this.eventsSubject.next(\r\n                                new OAuthErrorEvent('discovery_document_load_error', err)\r\n                            );\r\n                            reject(err);\r\n                            return;\r\n                        });\r\n                },\r\n                err => {\r\n                    this.logger.error('error loading discovery document', err);\r\n                    this.eventsSubject.next(\r\n                        new OAuthErrorEvent('discovery_document_load_error', err)\r\n                    );\r\n                    reject(err);\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    protected loadJwks(): Promise<object> {\r\n        return new Promise<object>((resolve, reject) => {\r\n            if (this.jwksUri) {\r\n                this.http.get(this.jwksUri).subscribe(\r\n                    jwks => {\r\n                        this.jwks = jwks;\r\n                        this.eventsSubject.next(\r\n                            new OAuthSuccessEvent('discovery_document_loaded')\r\n                        );\r\n                        resolve(jwks);\r\n                    },\r\n                    err => {\r\n                        this.logger.error('error loading jwks', err);\r\n                        this.eventsSubject.next(\r\n                            new OAuthErrorEvent('jwks_load_error', err)\r\n                        );\r\n                        reject(err);\r\n                    }\r\n                );\r\n            } else {\r\n                resolve(null);\r\n            }\r\n        });\r\n    }\r\n\r\n    protected validateDiscoveryDocument(doc: OidcDiscoveryDoc): boolean {\r\n        let errors: string[];\r\n\r\n        if (!this.skipIssuerCheck && doc.issuer !== this.issuer) {\r\n            this.logger.error(\r\n                'invalid issuer in discovery document',\r\n                'expected: ' + this.issuer,\r\n                'current: ' + doc.issuer\r\n            );\r\n            return false;\r\n        }\r\n\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.authorization_endpoint);\r\n        if (errors.length > 0) {\r\n            this.logger.error(\r\n                'error validating authorization_endpoint in discovery document',\r\n                errors\r\n            );\r\n            return false;\r\n        }\r\n\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.end_session_endpoint);\r\n        if (errors.length > 0) {\r\n            this.logger.error(\r\n                'error validating end_session_endpoint in discovery document',\r\n                errors\r\n            );\r\n            return false;\r\n        }\r\n\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.token_endpoint);\r\n        if (errors.length > 0) {\r\n            this.logger.error(\r\n                'error validating token_endpoint in discovery document',\r\n                errors\r\n            );\r\n        }\r\n\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.userinfo_endpoint);\r\n        if (errors.length > 0) {\r\n            this.logger.error(\r\n                'error validating userinfo_endpoint in discovery document',\r\n                errors\r\n            );\r\n            return false;\r\n        }\r\n\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.jwks_uri);\r\n        if (errors.length > 0) {\r\n            this.logger.error('error validating jwks_uri in discovery document', errors);\r\n            return false;\r\n        }\r\n\r\n        if (this.sessionChecksEnabled && !doc.check_session_iframe) {\r\n            this.logger.warn(\r\n                'sessionChecksEnabled is activated but discovery document' +\r\n                ' does not contain a check_session_iframe field'\r\n            );\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Uses password flow to exchange userName and password for an\r\n     * access_token. After receiving the access_token, this method\r\n     * uses it to query the userinfo endpoint in order to get information\r\n     * about the user in question.\r\n     *\r\n     * When using this, make sure that the property oidc is set to false.\r\n     * Otherwise stricter validations take place that make this operation\r\n     * fail.\r\n     *\r\n     * @param userName\r\n     * @param password\r\n     * @param headers Optional additional http-headers.\r\n     */\r\n    public fetchTokenUsingPasswordFlowAndLoadUserProfile(\r\n        userName: string,\r\n        password: string,\r\n        headers: HttpHeaders = new HttpHeaders()\r\n    ): Promise<UserInfo> {\r\n        return this.fetchTokenUsingPasswordFlow(userName, password, headers).then(\r\n            () => this.loadUserProfile()\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Loads the user profile by accessing the user info endpoint defined by OpenId Connect.\r\n     *\r\n     * When using this with OAuth2 password flow, make sure that the property oidc is set to false.\r\n     * Otherwise stricter validations take place that make this operation fail.\r\n     */\r\n    public loadUserProfile(): Promise<UserInfo> {\r\n        if (!this.hasValidAccessToken()) {\r\n            throw new Error('Can not load User Profile without access_token');\r\n        }\r\n        if (!this.validateUrlForHttps(this.userinfoEndpoint)) {\r\n            throw new Error('userinfoEndpoint must use HTTPS (with TLS), or config value for property \\'requireHttps\\' must be set to \\'false\\' and allow HTTP (without TLS).');\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            const headers = new HttpHeaders().set(\r\n                'Authorization',\r\n                'Bearer ' + this.getAccessToken()\r\n            );\r\n\r\n            this.http.get<UserInfo>(this.userinfoEndpoint, { headers }).subscribe(\r\n                info => {\r\n                    this.debug('userinfo received', info);\r\n\r\n                    const existingClaims = this.getIdentityClaims() || {};\r\n\r\n                    if (!this.skipSubjectCheck) {\r\n                        if (\r\n                            this.oidc &&\r\n                            (!existingClaims['sub'] || info.sub !== existingClaims['sub'])\r\n                        ) {\r\n                            const err =\r\n                                'if property oidc is true, the received user-id (sub) has to be the user-id ' +\r\n                                'of the user that has logged in with oidc.\\n' +\r\n                                'if you are not using oidc but just oauth2 password flow set oidc to false';\r\n\r\n                            reject(err);\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    info = Object.assign({}, existingClaims, info);\r\n\r\n                    this._storage.setItem('id_token_claims_obj', JSON.stringify(info));\r\n                    this.eventsSubject.next(new OAuthSuccessEvent('user_profile_loaded'));\r\n                    resolve(info);\r\n                },\r\n                err => {\r\n                    this.logger.error('error loading user info', err);\r\n                    this.eventsSubject.next(\r\n                        new OAuthErrorEvent('user_profile_load_error', err)\r\n                    );\r\n                    reject(err);\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Uses password flow to exchange userName and password for an access_token.\r\n     * @param userName\r\n     * @param password\r\n     * @param headers Optional additional http-headers.\r\n     */\r\n    public fetchTokenUsingPasswordFlow(\r\n        userName: string,\r\n        password: string,\r\n        headers: HttpHeaders = new HttpHeaders()\r\n\r\n    ): Promise<TokenResponse> {\r\n        this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\r\n\r\n        return new Promise((resolve, reject) => {\r\n            /**\r\n             * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\r\n             * serialize and parse URL parameter keys and values.\r\n             *\r\n             * @stable\r\n             */\r\n            let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() })\r\n                .set('grant_type', 'password')\r\n                .set('scope', this.scope)\r\n                .set('username', userName)\r\n                .set('password', password);\r\n\r\n            if (this.useHttpBasicAuth) {\r\n                const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\r\n                headers = headers.set(\r\n                    'Authorization',\r\n                    'Basic ' + header);\r\n            }\r\n\r\n            if (!this.useHttpBasicAuth) {\r\n                params = params.set('client_id', this.clientId);\r\n            }\r\n\r\n            if (!this.useHttpBasicAuth && this.dummyClientSecret) {\r\n                params = params.set('client_secret', this.dummyClientSecret);\r\n            }\r\n\r\n            if (this.customQueryParams) {\r\n                for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n                    params = params.set(key, this.customQueryParams[key]);\r\n                }\r\n            }\r\n\r\n            headers = headers.set(\r\n                'Content-Type',\r\n                'application/x-www-form-urlencoded'\r\n            );\r\n\r\n            this.http\r\n                .post<TokenResponse>(this.tokenEndpoint, params, { headers })\r\n                .subscribe(\r\n                    tokenResponse => {\r\n                        this.debug('tokenResponse', tokenResponse);\r\n                        this.storeAccessTokenResponse(\r\n                            tokenResponse.access_token,\r\n                            tokenResponse.refresh_token,\r\n                            tokenResponse.expires_in,\r\n                            tokenResponse.scope\r\n                        );\r\n\r\n                        this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n                        resolve(tokenResponse);\r\n                    },\r\n                    err => {\r\n                        this.logger.error('Error performing password flow', err);\r\n                        this.eventsSubject.next(new OAuthErrorEvent('token_error', err));\r\n                        reject(err);\r\n                    }\r\n                );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Refreshes the token using a refresh_token.\r\n     * This does not work for implicit flow, b/c\r\n     * there is no refresh_token in this flow.\r\n     * A solution for this is provided by the\r\n     * method silentRefresh.\r\n     */\r\n    public refreshToken(): Promise<TokenResponse> {\r\n        this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let params = new HttpParams()\r\n                .set('grant_type', 'refresh_token')\r\n                .set('scope', this.scope)\r\n                .set('refresh_token', this._storage.getItem('refresh_token'));\r\n\r\n            let headers = new HttpHeaders().set(\r\n                'Content-Type',\r\n                'application/x-www-form-urlencoded'\r\n            );\r\n\r\n            if (this.useHttpBasicAuth) {\r\n                const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\r\n                headers = headers.set(\r\n                    'Authorization',\r\n                    'Basic ' + header);\r\n            }\r\n\r\n            if (!this.useHttpBasicAuth) {\r\n                params = params.set('client_id', this.clientId);\r\n            }\r\n\r\n            if (!this.useHttpBasicAuth && this.dummyClientSecret) {\r\n                params = params.set('client_secret', this.dummyClientSecret);\r\n            }\r\n\r\n            if (this.customQueryParams) {\r\n                for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n                    params = params.set(key, this.customQueryParams[key]);\r\n                }\r\n            }\r\n\r\n            this.http\r\n                .post<TokenResponse>(this.tokenEndpoint, params, { headers })\r\n                .pipe(switchMap(tokenResponse => {\r\n                    if (tokenResponse.id_token) {\r\n                        return from(this.processIdToken(tokenResponse.id_token, tokenResponse.access_token, true))\r\n                            .pipe(\r\n                                tap(result => this.storeIdToken(result)),\r\n                                map(_ => tokenResponse)\r\n                            );\r\n                    } else {\r\n                        return of(tokenResponse);\r\n                    }\r\n                }))\r\n                .subscribe(\r\n                    tokenResponse => {\r\n                        this.debug('refresh tokenResponse', tokenResponse);\r\n                        this.storeAccessTokenResponse(\r\n                            tokenResponse.access_token,\r\n                            tokenResponse.refresh_token,\r\n                            tokenResponse.expires_in,\r\n                            tokenResponse.scope\r\n                        );\r\n\r\n                        this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n                        this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\r\n                        resolve(tokenResponse);\r\n                    },\r\n                    err => {\r\n                        this.logger.error('Error refreshing token', err);\r\n                        this.eventsSubject.next(\r\n                            new OAuthErrorEvent('token_refresh_error', err)\r\n                        );\r\n                        reject(err);\r\n                    }\r\n                );\r\n        });\r\n    }\r\n\r\n    protected removeSilentRefreshEventListener(): void {\r\n        if (this.silentRefreshPostMessageEventListener) {\r\n            window.removeEventListener(\r\n                'message',\r\n                this.silentRefreshPostMessageEventListener\r\n            );\r\n            this.silentRefreshPostMessageEventListener = null;\r\n        }\r\n    }\r\n\r\n    protected setupSilentRefreshEventListener(): void {\r\n        this.removeSilentRefreshEventListener();\r\n\r\n        this.silentRefreshPostMessageEventListener = (e: MessageEvent) => {\r\n            const message = this.processMessageEventMessage(e);\r\n\r\n            this.tryLogin({\r\n                customHashFragment: message,\r\n                preventClearHashAfterLogin: true,\r\n                customRedirectUri: this.silentRefreshRedirectUri || this.redirectUri\r\n            }).catch(err => this.debug('tryLogin during silent refresh failed', err));\r\n        };\r\n\r\n        window.addEventListener(\r\n            'message',\r\n            this.silentRefreshPostMessageEventListener\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Performs a silent refresh for implicit flow.\r\n     * Use this method to get new tokens when/before\r\n     * the existing tokens expire.\r\n     */\r\n    public silentRefresh(params: object = {}, noPrompt = true): Promise<OAuthEvent> {\r\n        const claims: object = this.getIdentityClaims() || {};\r\n\r\n        if (this.useIdTokenHintForSilentRefresh && this.hasValidIdToken()) {\r\n            params['id_token_hint'] = this.getIdToken();\r\n        }\r\n\r\n        if (!this.validateUrlForHttps(this.loginUrl)) {\r\n            throw new Error('loginUrl  must use HTTPS (with TLS), or config value for property \\'requireHttps\\' must be set to \\'false\\' and allow HTTP (without TLS).');\r\n        }\r\n\r\n        if (typeof document === 'undefined') {\r\n            throw new Error('silent refresh is not supported on this platform');\r\n        }\r\n\r\n        const existingIframe = document.getElementById(\r\n            this.silentRefreshIFrameName\r\n        );\r\n\r\n        if (existingIframe) {\r\n            document.body.removeChild(existingIframe);\r\n        }\r\n\r\n        this.silentRefreshSubject = claims['sub'];\r\n\r\n        const iframe = document.createElement('iframe');\r\n        iframe.id = this.silentRefreshIFrameName;\r\n\r\n        this.setupSilentRefreshEventListener();\r\n\r\n        const redirectUri = this.silentRefreshRedirectUri || this.redirectUri;\r\n        this.createLoginUrl(null, null, redirectUri, noPrompt, params).then(url => {\r\n            iframe.setAttribute('src', url);\r\n\r\n            if (!this.silentRefreshShowIFrame) {\r\n                iframe.style['display'] = 'none';\r\n            }\r\n            document.body.appendChild(iframe);\r\n        });\r\n\r\n        const errors = this.events.pipe(\r\n            filter(e => e instanceof OAuthErrorEvent),\r\n            first()\r\n        );\r\n        const success = this.events.pipe(\r\n            filter(e => e.type === 'token_received'),\r\n            first()\r\n        );\r\n        const timeout = of(\r\n            new OAuthErrorEvent('silent_refresh_timeout', null)\r\n        ).pipe(delay(this.silentRefreshTimeout));\r\n\r\n        return race([errors, success, timeout])\r\n            .pipe(\r\n                map(e => {\r\n                    if (e instanceof OAuthErrorEvent) {\r\n                        if (e.type === 'silent_refresh_timeout') {\r\n                            this.eventsSubject.next(e);\r\n                        } else {\r\n                            e = new OAuthErrorEvent('silent_refresh_error', e);\r\n                            this.eventsSubject.next(e);\r\n                        }\r\n                        throw e;\r\n                    } else if (e.type === 'token_received') {\r\n                        e = new OAuthSuccessEvent('silently_refreshed');\r\n                        this.eventsSubject.next(e);\r\n                    }\r\n                    return e;\r\n                })\r\n            )\r\n            .toPromise();\r\n    }\r\n\r\n    /**\r\n     * This method exists for backwards compatibility.\r\n     * {@link OAuthService#initLoginFlowInPopup} handles both code\r\n     * and implicit flows.\r\n     */\r\n    public initImplicitFlowInPopup(options?: { height?: number, width?: number }) {\r\n        return this.initLoginFlowInPopup(options);\r\n    }\r\n\r\n    public initLoginFlowInPopup(options?: { height?: number, width?: number }) {\r\n        options = options || {};\r\n        return this.createLoginUrl(null, null, this.silentRefreshRedirectUri, false, {\r\n            display: 'popup'\r\n        }).then(url => {\r\n            return new Promise((resolve, reject) => {\r\n                /**\r\n                 * Error handling section\r\n                 */\r\n                const checkForPopupClosedInterval = 500;\r\n                let windowRef = window.open(url, '_blank', this.calculatePopupFeatures(options));\r\n                let checkForPopupClosedTimer: any;\r\n                const checkForPopupClosed = () => {\r\n                    if (!windowRef || windowRef.closed) {\r\n                        cleanup();\r\n                        reject(new OAuthErrorEvent('popup_closed', {}));\r\n                    }\r\n                };\r\n                if (!windowRef) {\r\n                    reject(new OAuthErrorEvent('popup_blocked', {}));\r\n                } else {\r\n                    checkForPopupClosedTimer = window.setInterval(checkForPopupClosed, checkForPopupClosedInterval);\r\n                }\r\n\r\n                const cleanup = () => {\r\n                    window.clearInterval(checkForPopupClosedTimer);\r\n                    window.removeEventListener('message', listener);\r\n                    if (windowRef !== null) {\r\n                        windowRef.close();\r\n                    }\r\n                    windowRef = null;\r\n                };\r\n\r\n                const listener = (e: MessageEvent) => {\r\n                    const message = this.processMessageEventMessage(e);\r\n\r\n                    if (message && message !== null) {\r\n                        this.tryLogin({\r\n                            customHashFragment: message,\r\n                            preventClearHashAfterLogin: true,\r\n                            customRedirectUri: this.silentRefreshRedirectUri,\r\n                        }).then(() => {\r\n                            cleanup();\r\n                            resolve();\r\n                        }, err => {\r\n                            cleanup();\r\n                            reject(err);\r\n                        });\r\n                    } else {\r\n                        console.log('false event firing');\r\n                    }\r\n\r\n                };\r\n\r\n                window.addEventListener('message', listener);\r\n            });\r\n        });\r\n    }\r\n\r\n    protected calculatePopupFeatures(options: { height?: number, width?: number }): string {\r\n        // Specify an static height and width and calculate centered position\r\n\r\n        const height = options.height || 470;\r\n        const width = options.width || 500;\r\n        const left = window.screenLeft + ((window.outerWidth - width) / 2);\r\n        const top = window.screenTop + ((window.outerHeight - height) / 2);\r\n        return `location=no,toolbar=no,width=${width},height=${height},top=${top},left=${left}`;\r\n    }\r\n\r\n    protected processMessageEventMessage(e: MessageEvent): string {\r\n        let expectedPrefix = '#';\r\n\r\n        if (this.silentRefreshMessagePrefix) {\r\n            expectedPrefix += this.silentRefreshMessagePrefix;\r\n        }\r\n\r\n        if (!e || !e.data || typeof e.data !== 'string') {\r\n            return;\r\n        }\r\n\r\n        const prefixedMessage: string = e.data;\r\n\r\n        if (!prefixedMessage.startsWith(expectedPrefix)) {\r\n            return;\r\n        }\r\n\r\n        return '#' + prefixedMessage.substr(expectedPrefix.length);\r\n    }\r\n\r\n    protected canPerformSessionCheck(): boolean {\r\n        if (!this.sessionChecksEnabled) {\r\n            return false;\r\n        }\r\n        if (!this.sessionCheckIFrameUrl) {\r\n            console.warn(\r\n                'sessionChecksEnabled is activated but there is no sessionCheckIFrameUrl'\r\n            );\r\n            return false;\r\n        }\r\n        const sessionState = this.getSessionState();\r\n        if (!sessionState) {\r\n            console.warn(\r\n                'sessionChecksEnabled is activated but there is no session_state'\r\n            );\r\n            return false;\r\n        }\r\n        if (typeof document === 'undefined') {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected setupSessionCheckEventListener(): void {\r\n        this.removeSessionCheckEventListener();\r\n\r\n        this.sessionCheckEventListener = (e: MessageEvent) => {\r\n            const origin = e.origin.toLowerCase();\r\n            const issuer = this.issuer.toLowerCase();\r\n\r\n            this.debug('sessionCheckEventListener');\r\n\r\n            if (!issuer.startsWith(origin)) {\r\n                this.debug(\r\n                    'sessionCheckEventListener',\r\n                    'wrong origin',\r\n                    origin,\r\n                    'expected',\r\n                    issuer\r\n                );\r\n\r\n                return;\r\n            }\r\n\r\n            // only run in Angular zone if it is 'changed' or 'error'\r\n            switch (e.data) {\r\n                case 'unchanged':\r\n                    this.handleSessionUnchanged();\r\n                    break;\r\n                case 'changed':\r\n                    this.ngZone.run(() => {\r\n                        this.handleSessionChange();\r\n                    });\r\n                    break;\r\n                case 'error':\r\n                    this.ngZone.run(() => {\r\n                        this.handleSessionError();\r\n                    });\r\n                    break;\r\n            }\r\n\r\n            this.debug('got info from session check inframe', e);\r\n        };\r\n\r\n        // prevent Angular from refreshing the view on every message (runs in intervals)\r\n        this.ngZone.runOutsideAngular(() => {\r\n            window.addEventListener('message', this.sessionCheckEventListener);\r\n        });\r\n    }\r\n\r\n    protected handleSessionUnchanged(): void {\r\n        this.debug('session check', 'session unchanged');\r\n    }\r\n\r\n    protected handleSessionChange(): void {\r\n        /* events: session_changed, relogin, stopTimer, logged_out*/\r\n        this.eventsSubject.next(new OAuthInfoEvent('session_changed'));\r\n        this.stopSessionCheckTimer();\r\n        if (this.silentRefreshRedirectUri) {\r\n            this.silentRefresh().catch(_ =>\r\n                this.debug('silent refresh failed after session changed')\r\n            );\r\n            this.waitForSilentRefreshAfterSessionChange();\r\n        } else {\r\n            this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\r\n            this.logOut(true);\r\n        }\r\n    }\r\n\r\n    protected waitForSilentRefreshAfterSessionChange(): void {\r\n        this.events\r\n            .pipe(\r\n                filter(\r\n                    (e: OAuthEvent) =>\r\n                        e.type === 'silently_refreshed' ||\r\n                        e.type === 'silent_refresh_timeout' ||\r\n                        e.type === 'silent_refresh_error'\r\n                ),\r\n                first()\r\n            )\r\n            .subscribe(e => {\r\n                if (e.type !== 'silently_refreshed') {\r\n                    this.debug('silent refresh did not work after session changed');\r\n                    this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\r\n                    this.logOut(true);\r\n                }\r\n            });\r\n    }\r\n\r\n    protected handleSessionError(): void {\r\n        this.stopSessionCheckTimer();\r\n        this.eventsSubject.next(new OAuthInfoEvent('session_error'));\r\n    }\r\n\r\n    protected removeSessionCheckEventListener(): void {\r\n        if (this.sessionCheckEventListener) {\r\n            window.removeEventListener('message', this.sessionCheckEventListener);\r\n            this.sessionCheckEventListener = null;\r\n        }\r\n    }\r\n\r\n    protected initSessionCheck(): void {\r\n        if (!this.canPerformSessionCheck()) {\r\n            return;\r\n        }\r\n\r\n        const existingIframe = document.getElementById(this.sessionCheckIFrameName);\r\n        if (existingIframe) {\r\n            document.body.removeChild(existingIframe);\r\n        }\r\n\r\n        const iframe = document.createElement('iframe');\r\n        iframe.id = this.sessionCheckIFrameName;\r\n\r\n        this.setupSessionCheckEventListener();\r\n\r\n        const url = this.sessionCheckIFrameUrl;\r\n        iframe.setAttribute('src', url);\r\n        iframe.style.display = 'none';\r\n        document.body.appendChild(iframe);\r\n\r\n        this.startSessionCheckTimer();\r\n    }\r\n\r\n    protected startSessionCheckTimer(): void {\r\n        this.stopSessionCheckTimer();\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.sessionCheckTimer = setInterval(\r\n                this.checkSession.bind(this),\r\n                this.sessionCheckIntervall\r\n            );\r\n        });\r\n    }\r\n\r\n    protected stopSessionCheckTimer(): void {\r\n        if (this.sessionCheckTimer) {\r\n            clearInterval(this.sessionCheckTimer);\r\n            this.sessionCheckTimer = null;\r\n        }\r\n    }\r\n\r\n    protected checkSession(): void {\r\n        const iframe: any = document.getElementById(this.sessionCheckIFrameName);\r\n\r\n        if (!iframe) {\r\n            this.logger.warn(\r\n                'checkSession did not find iframe',\r\n                this.sessionCheckIFrameName\r\n            );\r\n        }\r\n\r\n        const sessionState = this.getSessionState();\r\n\r\n        if (!sessionState) {\r\n            this.stopSessionCheckTimer();\r\n        }\r\n\r\n        const message = this.clientId + ' ' + sessionState;\r\n        iframe.contentWindow.postMessage(message, this.issuer);\r\n    }\r\n\r\n    protected async createLoginUrl(\r\n        state = '',\r\n        loginHint = '',\r\n        customRedirectUri = '',\r\n        noPrompt = false,\r\n        params: object = {}\r\n    ): Promise<string> {\r\n        const that = this;\r\n\r\n        let redirectUri: string;\r\n\r\n        if (customRedirectUri) {\r\n            redirectUri = customRedirectUri;\r\n        } else {\r\n            redirectUri = this.redirectUri;\r\n        }\r\n\r\n        const nonce = await this.createAndSaveNonce();\r\n\r\n        if (state) {\r\n            state = nonce + this.config.nonceStateSeparator + state;\r\n        } else {\r\n            state = nonce;\r\n        }\r\n\r\n        if (!this.requestAccessToken && !this.oidc) {\r\n            throw new Error(\r\n                'Either requestAccessToken or oidc or both must be true'\r\n            );\r\n        }\r\n\r\n        if (this.config.responseType) {\r\n            this.responseType = this.config.responseType;\r\n        } else {\r\n            if (this.oidc && this.requestAccessToken) {\r\n                this.responseType = 'id_token token';\r\n            } else if (this.oidc && !this.requestAccessToken) {\r\n                this.responseType = 'id_token';\r\n            } else {\r\n                this.responseType = 'token';\r\n            }\r\n        }\r\n\r\n        const seperationChar = that.loginUrl.indexOf('?') > -1 ? '&' : '?';\r\n\r\n        let scope = that.scope;\r\n\r\n        if (this.oidc && !scope.match(/(^|\\s)openid($|\\s)/)) {\r\n            scope = 'openid ' + scope;\r\n        }\r\n\r\n        let url =\r\n            that.loginUrl +\r\n            seperationChar +\r\n            'response_type=' +\r\n            encodeURIComponent(that.responseType) +\r\n            '&client_id=' +\r\n            encodeURIComponent(that.clientId) +\r\n            '&state=' +\r\n            encodeURIComponent(state) +\r\n            '&redirect_uri=' +\r\n            encodeURIComponent(redirectUri) +\r\n            '&scope=' +\r\n            encodeURIComponent(scope);\r\n\r\n        if (this.responseType === 'code' && !this.disablePKCE) {\r\n            const [challenge, verifier] = await this.createChallangeVerifierPairForPKCE();\r\n            this._storage.setItem('PKCI_verifier', verifier);\r\n            url += '&code_challenge=' + challenge;\r\n            url += '&code_challenge_method=S256';\r\n        }\r\n\r\n        if (loginHint) {\r\n            url += '&login_hint=' + encodeURIComponent(loginHint);\r\n        }\r\n\r\n        if (that.resource) {\r\n            url += '&resource=' + encodeURIComponent(that.resource);\r\n        }\r\n\r\n        if (that.oidc) {\r\n            url += '&nonce=' + encodeURIComponent(nonce);\r\n        }\r\n\r\n        if (noPrompt) {\r\n            url += '&prompt=none';\r\n        }\r\n\r\n        for (const key of Object.keys(params)) {\r\n            url +=\r\n                '&' + encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n        }\r\n\r\n        if (this.customQueryParams) {\r\n            for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n                url +=\r\n                    '&' + key + '=' + encodeURIComponent(this.customQueryParams[key]);\r\n            }\r\n        }\r\n\r\n        return url;\r\n\r\n    }\r\n\r\n    initImplicitFlowInternal(\r\n        additionalState = '',\r\n        params: string | object = ''\r\n    ): void {\r\n        if (this.inImplicitFlow) {\r\n            return;\r\n        }\r\n\r\n        this.inImplicitFlow = true;\r\n\r\n        if (!this.validateUrlForHttps(this.loginUrl)) {\r\n            throw new Error(\r\n                'loginUrl  must use HTTPS (with TLS), or config value for property \\'requireHttps\\' must be set to \\'false\\' and allow HTTP (without TLS).'\r\n            );\r\n        }\r\n\r\n        let addParams: object = {};\r\n        let loginHint: string = null;\r\n\r\n        if (typeof params === 'string') {\r\n            loginHint = params;\r\n        } else if (typeof params === 'object') {\r\n            addParams = params;\r\n        }\r\n\r\n        this.createLoginUrl(additionalState, loginHint, null, false, addParams)\r\n            .then(this.config.openUri)\r\n            .catch(error => {\r\n                console.error('Error in initImplicitFlow', error);\r\n                this.inImplicitFlow = false;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Starts the implicit flow and redirects to user to\r\n     * the auth servers' login url.\r\n     *\r\n     * @param additionalState Optional state that is passed around.\r\n     *  You'll find this state in the property `state` after `tryLogin` logged in the user.\r\n     * @param params Hash with additional parameter. If it is a string, it is used for the\r\n     *               parameter loginHint (for the sake of compatibility with former versions)\r\n     */\r\n    public initImplicitFlow(\r\n        additionalState = '',\r\n        params: string | object = ''\r\n    ): void {\r\n        if (this.loginUrl !== '') {\r\n            this.initImplicitFlowInternal(additionalState, params);\r\n        } else {\r\n            this.events\r\n                .pipe(filter(e => e.type === 'discovery_document_loaded'))\r\n                .subscribe(_ => this.initImplicitFlowInternal(additionalState, params));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reset current implicit flow\r\n     *\r\n     * @description This method allows resetting the current implict flow in order to be initialized again.\r\n     */\r\n    public resetImplicitFlow(): void {\r\n        this.inImplicitFlow = false;\r\n    }\r\n\r\n    protected callOnTokenReceivedIfExists(options: LoginOptions): void {\r\n        const that = this;\r\n        if (options.onTokenReceived) {\r\n            const tokenParams = {\r\n                idClaims: that.getIdentityClaims(),\r\n                idToken: that.getIdToken(),\r\n                accessToken: that.getAccessToken(),\r\n                state: that.state\r\n            };\r\n            options.onTokenReceived(tokenParams);\r\n        }\r\n    }\r\n\r\n    protected storeAccessTokenResponse(\r\n        accessToken: string,\r\n        refreshToken: string,\r\n        expiresIn: number,\r\n        grantedScopes: String\r\n    ): void {\r\n        this._storage.setItem('access_token', accessToken);\r\n        if (grantedScopes) {\r\n            this._storage.setItem('granted_scopes', JSON.stringify(grantedScopes.split('+')));\r\n        }\r\n        this._storage.setItem('access_token_stored_at', '' + Date.now());\r\n        if (expiresIn) {\r\n            const expiresInMilliSeconds = expiresIn * 1000;\r\n            const now = new Date();\r\n            const expiresAt = now.getTime() + expiresInMilliSeconds;\r\n            this._storage.setItem('expires_at', '' + expiresAt);\r\n        }\r\n\r\n        if (refreshToken) {\r\n            this._storage.setItem('refresh_token', refreshToken);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Delegates to tryLoginImplicitFlow for the sake of competability\r\n     * @param options Optional options.\r\n     */\r\n    public tryLogin(options: LoginOptions = null): Promise<boolean> {\r\n        if (this.config.responseType === 'code') {\r\n            return this.tryLoginCodeFlow(options).then(_ => true);\r\n        }\r\n        else {\r\n            return this.tryLoginImplicitFlow(options);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    private parseQueryString(queryString: string): object {\r\n        if (!queryString || queryString.length === 0) {\r\n            return {};\r\n        }\r\n\r\n        if (queryString.charAt(0) === '?') {\r\n            queryString = queryString.substr(1);\r\n        }\r\n\r\n        return this.urlHelper.parseQueryString(queryString);\r\n\r\n\r\n    }\r\n\r\n    public tryLoginCodeFlow(options: LoginOptions = null): Promise<void> {\r\n        options = options || {};\r\n\r\n        const querySource = options.customHashFragment ?\r\n            options.customHashFragment.substring(1) :\r\n            window.location.search;\r\n\r\n        const parts = this.getCodePartsFromUrl(window.location.search);\r\n\r\n        const code = parts['code'];\r\n        const state = parts['state'];\r\n\r\n        if (!options.preventClearHashAfterLogin) {\r\n            const href = location.href\r\n                .replace(/[&\\?]code=[^&\\$]*/, '')\r\n                .replace(/[&\\?]scope=[^&\\$]*/, '')\r\n                .replace(/[&\\?]state=[^&\\$]*/, '')\r\n                .replace(/[&\\?]session_state=[^&\\$]*/, '');\r\n\r\n            history.replaceState(null, window.name, href);\r\n        }\r\n\r\n        let [nonceInState, userState] = this.parseState(state);\r\n        this.state = userState;\r\n\r\n        if (parts['error']) {\r\n            this.debug('error trying to login');\r\n            this.handleLoginError({}, parts);\r\n            const err = new OAuthErrorEvent('code_error', {}, parts);\r\n            this.eventsSubject.next(err);\r\n            return Promise.reject(err);\r\n        }\r\n\r\n        if (!nonceInState) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        const success = this.validateNonce(nonceInState);\r\n        if (!success) {\r\n            const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\r\n            this.eventsSubject.next(event);\r\n            return Promise.reject(event);\r\n        }\r\n\r\n        if (code) {\r\n            return new Promise((resolve, reject) => {\r\n                this.getTokenFromCode(code, options).then(result => {\r\n                    resolve();\r\n                }).catch(err => {\r\n                    reject(err);\r\n                });\r\n            });\r\n        } else {\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Retrieve the returned auth code from the redirect uri that has been called.\r\n    * If required also check hash, as we could use hash location strategy.\r\n    */\r\n    private getCodePartsFromUrl(queryString: string): object {\r\n        if (!queryString || queryString.length === 0) {\r\n            return this.urlHelper.getHashFragmentParams();\r\n        }\r\n\r\n        // normalize query string\r\n        if (queryString.charAt(0) === '?') {\r\n            queryString = queryString.substr(1);\r\n        }\r\n\r\n        return this.urlHelper.parseQueryString(queryString);\r\n    }\r\n\r\n    /**\r\n     * Get token using an intermediate code. Works for the Authorization Code flow.\r\n     */\r\n    private getTokenFromCode(code: string, options: LoginOptions): Promise<object> {\r\n        let params = new HttpParams()\r\n            .set('grant_type', 'authorization_code')\r\n            .set('code', code)\r\n            .set('redirect_uri', options.customRedirectUri || this.redirectUri);\r\n\r\n        if (!this.disablePKCE) {\r\n            const pkciVerifier = this._storage.getItem('PKCI_verifier');\r\n\r\n            if (!pkciVerifier) {\r\n                console.warn('No PKCI verifier found in oauth storage!');\r\n            } else {\r\n                params = params.set('code_verifier', pkciVerifier);\r\n            }\r\n        }\r\n\r\n        return this.fetchAndProcessToken(params);\r\n    }\r\n\r\n    private fetchAndProcessToken(params: HttpParams): Promise<TokenResponse> {\r\n\r\n        this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\r\n        let headers = new HttpHeaders()\r\n            .set('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n        if (this.useHttpBasicAuth) {\r\n            const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\r\n            headers = headers.set(\r\n                'Authorization',\r\n                'Basic ' + header);\r\n        }\r\n\r\n        if (!this.useHttpBasicAuth) {\r\n            params = params.set('client_id', this.clientId);\r\n        }\r\n\r\n        if (!this.useHttpBasicAuth && this.dummyClientSecret) {\r\n            params = params.set('client_secret', this.dummyClientSecret);\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            if (this.customQueryParams) {\r\n                for (let key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n                    params = params.set(key, this.customQueryParams[key]);\r\n                }\r\n            }\r\n\r\n            this.http.post<TokenResponse>(this.tokenEndpoint, params, { headers }).subscribe(\r\n                (tokenResponse) => {\r\n                    this.debug('refresh tokenResponse', tokenResponse);\r\n                    this.storeAccessTokenResponse(\r\n                        tokenResponse.access_token,\r\n                        tokenResponse.refresh_token,\r\n                        tokenResponse.expires_in,\r\n                        tokenResponse.scope);\r\n\r\n                    if (this.oidc && tokenResponse.id_token) {\r\n                        this.processIdToken(tokenResponse.id_token, tokenResponse.access_token).\r\n                            then(result => {\r\n                                this.storeIdToken(result);\r\n\r\n                                this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n                                this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\r\n\r\n                                resolve(tokenResponse);\r\n                            })\r\n                            .catch(reason => {\r\n                                this.eventsSubject.next(new OAuthErrorEvent('token_validation_error', reason));\r\n                                console.error('Error validating tokens');\r\n                                console.error(reason);\r\n\r\n                                reject(reason);\r\n                            });\r\n                    } else {\r\n                        this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n                        this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\r\n\r\n                        resolve(tokenResponse);\r\n                    }\r\n                },\r\n                (err) => {\r\n                    console.error('Error getting token', err);\r\n                    this.eventsSubject.next(new OAuthErrorEvent('token_refresh_error', err));\r\n                    reject(err);\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Checks whether there are tokens in the hash fragment\r\n     * as a result of the implicit flow. These tokens are\r\n     * parsed, validated and used to sign the user in to the\r\n     * current client.\r\n     *\r\n     * @param options Optional options.\r\n     */\r\n    public tryLoginImplicitFlow(options: LoginOptions = null): Promise<boolean> {\r\n        options = options || {};\r\n\r\n        let parts: object;\r\n\r\n        if (options.customHashFragment) {\r\n            parts = this.urlHelper.getHashFragmentParams(options.customHashFragment);\r\n        } else {\r\n            parts = this.urlHelper.getHashFragmentParams();\r\n        }\r\n\r\n        this.debug('parsed url', parts);\r\n\r\n        const state = parts['state'];\r\n\r\n        let [nonceInState, userState] = this.parseState(state);\r\n        this.state = userState;\r\n\r\n        if (parts['error']) {\r\n            this.debug('error trying to login');\r\n            this.handleLoginError(options, parts);\r\n            const err = new OAuthErrorEvent('token_error', {}, parts);\r\n            this.eventsSubject.next(err);\r\n            return Promise.reject(err);\r\n        }\r\n\r\n        const accessToken = parts['access_token'];\r\n        const idToken = parts['id_token'];\r\n        const sessionState = parts['session_state'];\r\n        const grantedScopes = parts['scope'];\r\n\r\n        if (!this.requestAccessToken && !this.oidc) {\r\n            return Promise.reject(\r\n                'Either requestAccessToken or oidc (or both) must be true.'\r\n            );\r\n        }\r\n\r\n        if (this.requestAccessToken && !accessToken) {\r\n            return Promise.resolve(false);\r\n        }\r\n        if (this.requestAccessToken && !options.disableOAuth2StateCheck && !state) {\r\n            return Promise.resolve(false);\r\n        }\r\n        if (this.oidc && !idToken) {\r\n            return Promise.resolve(false);\r\n        }\r\n\r\n        if (this.sessionChecksEnabled && !sessionState) {\r\n            this.logger.warn(\r\n                'session checks (Session Status Change Notification) ' +\r\n                'were activated in the configuration but the id_token ' +\r\n                'does not contain a session_state claim'\r\n            );\r\n        }\r\n\r\n        if (this.requestAccessToken && !options.disableOAuth2StateCheck) {\r\n            const success = this.validateNonce(nonceInState);\r\n\r\n            if (!success) {\r\n                const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\r\n                this.eventsSubject.next(event);\r\n                return Promise.reject(event);\r\n            }\r\n        }\r\n\r\n        if (this.requestAccessToken) {\r\n            this.storeAccessTokenResponse(\r\n                accessToken,\r\n                null,\r\n                parts['expires_in'] || this.fallbackAccessTokenExpirationTimeInSec,\r\n                grantedScopes\r\n            );\r\n        }\r\n\r\n        if (!this.oidc) {\r\n            this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n            if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\r\n                location.hash = '';\r\n            }\r\n\r\n            this.callOnTokenReceivedIfExists(options);\r\n            return Promise.resolve(true);\r\n\r\n        }\r\n\r\n        return this.processIdToken(idToken, accessToken)\r\n            .then(result => {\r\n                if (options.validationHandler) {\r\n                    return options\r\n                        .validationHandler({\r\n                            accessToken: accessToken,\r\n                            idClaims: result.idTokenClaims,\r\n                            idToken: result.idToken,\r\n                            state: state\r\n                        })\r\n                        .then(_ => result);\r\n                }\r\n                return result;\r\n            })\r\n            .then(result => {\r\n                this.storeIdToken(result);\r\n                this.storeSessionState(sessionState);\r\n                if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\r\n                    location.hash = '';\r\n                }\r\n                this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n                this.callOnTokenReceivedIfExists(options);\r\n                this.inImplicitFlow = false;\r\n                return true;\r\n            })\r\n            .catch(reason => {\r\n                this.eventsSubject.next(\r\n                    new OAuthErrorEvent('token_validation_error', reason)\r\n                );\r\n                this.logger.error('Error validating tokens');\r\n                this.logger.error(reason);\r\n                return Promise.reject(reason);\r\n            });\r\n    }\r\n\r\n    private parseState(state: string): [string, string] {\r\n        let nonce = state;\r\n        let userState = '';\r\n\r\n        if (state) {\r\n            const idx = state.indexOf(this.config.nonceStateSeparator);\r\n            if (idx > -1) {\r\n                nonce = state.substr(0, idx);\r\n                userState = state.substr(idx + this.config.nonceStateSeparator.length);\r\n            }\r\n        }\r\n        return [nonce, userState];\r\n    }\r\n\r\n    protected validateNonce(\r\n        nonceInState: string\r\n    ): boolean {\r\n        const savedNonce = this._storage.getItem('nonce');\r\n        if (savedNonce !== nonceInState) {\r\n\r\n            const err = 'Validating access_token failed, wrong state/nonce.';\r\n            console.error(err, savedNonce, nonceInState);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    protected storeIdToken(idToken: ParsedIdToken): void {\r\n        this._storage.setItem('id_token', idToken.idToken);\r\n        this._storage.setItem('id_token_claims_obj', idToken.idTokenClaimsJson);\r\n        this._storage.setItem('id_token_expires_at', '' + idToken.idTokenExpiresAt);\r\n        this._storage.setItem('id_token_stored_at', '' + Date.now());\r\n    }\r\n\r\n    protected storeSessionState(sessionState: string): void {\r\n        this._storage.setItem('session_state', sessionState);\r\n    }\r\n\r\n    protected getSessionState(): string {\r\n        return this._storage.getItem('session_state');\r\n    }\r\n\r\n    protected handleLoginError(options: LoginOptions, parts: object): void {\r\n        if (options.onLoginError) {\r\n            options.onLoginError(parts);\r\n        }\r\n        if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\r\n            location.hash = '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public processIdToken(\r\n        idToken: string,\r\n        accessToken: string,\r\n        skipNonceCheck = false\r\n    ): Promise<ParsedIdToken> {\r\n        const tokenParts = idToken.split('.');\r\n        const headerBase64 = this.padBase64(tokenParts[0]);\r\n        const headerJson = b64DecodeUnicode(headerBase64);\r\n        const header = JSON.parse(headerJson);\r\n        const claimsBase64 = this.padBase64(tokenParts[1]);\r\n        const claimsJson = b64DecodeUnicode(claimsBase64);\r\n        const claims = JSON.parse(claimsJson);\r\n        const savedNonce = this._storage.getItem('nonce');\r\n\r\n        if (Array.isArray(claims.aud)) {\r\n            if (claims.aud.every(v => v !== this.clientId)) {\r\n                const err = 'Wrong audience: ' + claims.aud.join(',');\r\n                this.logger.warn(err);\r\n                return Promise.reject(err);\r\n            }\r\n        } else {\r\n            if (claims.aud !== this.clientId) {\r\n                const err = 'Wrong audience: ' + claims.aud;\r\n                this.logger.warn(err);\r\n                return Promise.reject(err);\r\n            }\r\n        }\r\n\r\n        if (!claims.sub) {\r\n            const err = 'No sub claim in id_token';\r\n            this.logger.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n\r\n        /* For now, we only check whether the sub against\r\n         * silentRefreshSubject when sessionChecksEnabled is on\r\n         * We will reconsider in a later version to do this\r\n         * in every other case too.\r\n         */\r\n        if (\r\n            this.sessionChecksEnabled &&\r\n            this.silentRefreshSubject &&\r\n            this.silentRefreshSubject !== claims['sub']\r\n        ) {\r\n            const err =\r\n                'After refreshing, we got an id_token for another user (sub). ' +\r\n                `Expected sub: ${this.silentRefreshSubject}, received sub: ${\r\n                claims['sub']\r\n                }`;\r\n\r\n            this.logger.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n\r\n        if (!claims.iat) {\r\n            const err = 'No iat claim in id_token';\r\n            this.logger.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n\r\n        if (!this.skipIssuerCheck && claims.iss !== this.issuer) {\r\n            const err = 'Wrong issuer: ' + claims.iss;\r\n            this.logger.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n\r\n        if (!skipNonceCheck && claims.nonce !== savedNonce) {\r\n            const err = 'Wrong nonce: ' + claims.nonce;\r\n            this.logger.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n        // at_hash is not applicable to authorization code flow\r\n        // addressing https://github.com/manfredsteyer/angular-oauth2-oidc/issues/661\r\n        // i.e. Based on spec the at_hash check is only true for implicit code flow on Ping Federate\r\n        // https://www.pingidentity.com/developer/en/resources/openid-connect-developers-guide.html\r\n        if (this.hasOwnProperty('responseType') && this.responseType === 'code') {\r\n            this.disableAtHashCheck = true;\r\n        }\r\n        if (\r\n            !this.disableAtHashCheck &&\r\n            this.requestAccessToken &&\r\n            !claims['at_hash']\r\n        ) {\r\n            const err = 'An at_hash is needed!';\r\n            this.logger.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n\r\n        const now = Date.now();\r\n        const issuedAtMSec = claims.iat * 1000;\r\n        const expiresAtMSec = claims.exp * 1000;\r\n        const clockSkewInMSec = (this.clockSkewInSec || 600) * 1000;\r\n\r\n        if (\r\n            issuedAtMSec - clockSkewInMSec >= now ||\r\n            expiresAtMSec + clockSkewInMSec <= now\r\n        ) {\r\n            const err = 'Token has expired';\r\n            console.error(err);\r\n            console.error({\r\n                now: now,\r\n                issuedAtMSec: issuedAtMSec,\r\n                expiresAtMSec: expiresAtMSec\r\n            });\r\n            return Promise.reject(err);\r\n        }\r\n\r\n        const validationParams: ValidationParams = {\r\n            accessToken: accessToken,\r\n            idToken: idToken,\r\n            jwks: this.jwks,\r\n            idTokenClaims: claims,\r\n            idTokenHeader: header,\r\n            loadKeys: () => this.loadJwks()\r\n        };\r\n\r\n        if (this.disableAtHashCheck) {\r\n            return this.checkSignature(validationParams).then(_ => {\r\n                const result: ParsedIdToken = {\r\n                    idToken: idToken,\r\n                    idTokenClaims: claims,\r\n                    idTokenClaimsJson: claimsJson,\r\n                    idTokenHeader: header,\r\n                    idTokenHeaderJson: headerJson,\r\n                    idTokenExpiresAt: expiresAtMSec\r\n                };\r\n                return result;\r\n            });\r\n        }\r\n\r\n        return this.checkAtHash(validationParams)\r\n            .then(atHashValid => {\r\n                if (\r\n                    !this.disableAtHashCheck &&\r\n                    this.requestAccessToken &&\r\n                    !atHashValid\r\n                ) {\r\n                    const err = 'Wrong at_hash';\r\n                    this.logger.warn(err);\r\n                    return Promise.reject(err);\r\n                }\r\n\r\n                return this.checkSignature(validationParams).then(_ => {\r\n                    const atHashCheckEnabled = !this.disableAtHashCheck;\r\n                    const result: ParsedIdToken = {\r\n                        idToken: idToken,\r\n                        idTokenClaims: claims,\r\n                        idTokenClaimsJson: claimsJson,\r\n                        idTokenHeader: header,\r\n                        idTokenHeaderJson: headerJson,\r\n                        idTokenExpiresAt: expiresAtMSec\r\n                    };\r\n                    if (atHashCheckEnabled) {\r\n                        return this.checkAtHash(validationParams).then(atHashValid => {\r\n                            if (this.requestAccessToken && !atHashValid) {\r\n                                const err = 'Wrong at_hash';\r\n                                this.logger.warn(err);\r\n                                return Promise.reject(err);\r\n                            } else {\r\n                                return result;\r\n                            }\r\n                        });\r\n                    } else {\r\n                        return result;\r\n                    }\r\n                });\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Returns the received claims about the user.\r\n     */\r\n    public getIdentityClaims(): object {\r\n        const claims = this._storage.getItem('id_token_claims_obj');\r\n        if (!claims) {\r\n            return null;\r\n        }\r\n        return JSON.parse(claims);\r\n    }\r\n\r\n    /**\r\n     * Returns the granted scopes from the server.\r\n     */\r\n    public getGrantedScopes(): object {\r\n        const scopes = this._storage.getItem('granted_scopes');\r\n        if (!scopes) {\r\n            return null;\r\n        }\r\n        return JSON.parse(scopes);\r\n    }\r\n\r\n    /**\r\n     * Returns the current id_token.\r\n     */\r\n    public getIdToken(): string {\r\n        return this._storage\r\n            ? this._storage.getItem('id_token')\r\n            : null;\r\n    }\r\n\r\n    protected padBase64(base64data): string {\r\n        while (base64data.length % 4 !== 0) {\r\n            base64data += '=';\r\n        }\r\n        return base64data;\r\n    }\r\n\r\n    /**\r\n     * Returns the current access_token.\r\n     */\r\n    public getAccessToken(): string {\r\n        return this._storage\r\n            ? this._storage.getItem('access_token')\r\n            : null;\r\n    }\r\n\r\n    public getRefreshToken(): string {\r\n        return this._storage\r\n            ? this._storage.getItem('refresh_token')\r\n            : null;\r\n    }\r\n\r\n    /**\r\n     * Returns the expiration date of the access_token\r\n     * as milliseconds since 1970.\r\n     */\r\n    public getAccessTokenExpiration(): number {\r\n        if (!this._storage.getItem('expires_at')) {\r\n            return null;\r\n        }\r\n        return parseInt(this._storage.getItem('expires_at'), 10);\r\n    }\r\n\r\n    protected getAccessTokenStoredAt(): number {\r\n        return parseInt(this._storage.getItem('access_token_stored_at'), 10);\r\n    }\r\n\r\n    protected getIdTokenStoredAt(): number {\r\n        return parseInt(this._storage.getItem('id_token_stored_at'), 10);\r\n    }\r\n\r\n    /**\r\n     * Returns the expiration date of the id_token\r\n     * as milliseconds since 1970.\r\n     */\r\n    public getIdTokenExpiration(): number {\r\n        if (!this._storage.getItem('id_token_expires_at')) {\r\n            return null;\r\n        }\r\n\r\n        return parseInt(this._storage.getItem('id_token_expires_at'), 10);\r\n    }\r\n\r\n    /**\r\n     * Checkes, whether there is a valid access_token.\r\n     */\r\n    public hasValidAccessToken(): boolean {\r\n        if (this.getAccessToken()) {\r\n            const expiresAt = this._storage.getItem('expires_at');\r\n            const now = new Date();\r\n            if (expiresAt && parseInt(expiresAt, 10) < now.getTime()) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Checks whether there is a valid id_token.\r\n     */\r\n    public hasValidIdToken(): boolean {\r\n        if (this.getIdToken()) {\r\n            const expiresAt = this._storage.getItem('id_token_expires_at');\r\n            const now = new Date();\r\n            if (expiresAt && parseInt(expiresAt, 10) < now.getTime()) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns the auth-header that can be used\r\n     * to transmit the access_token to a service\r\n     */\r\n    public authorizationHeader(): string {\r\n        return 'Bearer ' + this.getAccessToken();\r\n    }\r\n\r\n    /**\r\n     * Removes all tokens and logs the user out.\r\n     * If a logout url is configured, the user is\r\n     * redirected to it.\r\n     * @param noRedirectToLogoutUrl\r\n     */\r\n    public logOut(noRedirectToLogoutUrl = false): void {\r\n        const id_token = this.getIdToken();\r\n        this._storage.removeItem('access_token');\r\n        this._storage.removeItem('id_token');\r\n        this._storage.removeItem('refresh_token');\r\n        this._storage.removeItem('nonce');\r\n        this._storage.removeItem('expires_at');\r\n        this._storage.removeItem('id_token_claims_obj');\r\n        this._storage.removeItem('id_token_expires_at');\r\n        this._storage.removeItem('id_token_stored_at');\r\n        this._storage.removeItem('access_token_stored_at');\r\n        this._storage.removeItem('granted_scopes');\r\n        this._storage.removeItem('session_state');\r\n\r\n        this.silentRefreshSubject = null;\r\n\r\n        this.eventsSubject.next(new OAuthInfoEvent('logout'));\r\n\r\n        if (!this.logoutUrl) {\r\n            return;\r\n        }\r\n        if (noRedirectToLogoutUrl) {\r\n            return;\r\n        }\r\n\r\n        if (!id_token && !this.postLogoutRedirectUri) {\r\n            return;\r\n        }\r\n\r\n        let logoutUrl: string;\r\n\r\n        if (!this.validateUrlForHttps(this.logoutUrl)) {\r\n            throw new Error(\r\n                'logoutUrl  must use HTTPS (with TLS), or config value for property \\'requireHttps\\' must be set to \\'false\\' and allow HTTP (without TLS).'\r\n            );\r\n        }\r\n\r\n        // For backward compatibility\r\n        if (this.logoutUrl.indexOf('{{') > -1) {\r\n            logoutUrl = this.logoutUrl\r\n                .replace(/\\{\\{id_token\\}\\}/, id_token)\r\n                .replace(/\\{\\{client_id\\}\\}/, this.clientId);\r\n        } else {\r\n\r\n            let params = new HttpParams();\r\n\r\n            if (id_token) {\r\n                params = params.set('id_token_hint', id_token);\r\n            }\r\n\r\n            const postLogoutUrl = this.postLogoutRedirectUri || this.redirectUri;\r\n            if (postLogoutUrl) {\r\n                params = params.set('post_logout_redirect_uri', postLogoutUrl);\r\n            }\r\n\r\n            logoutUrl =\r\n                this.logoutUrl +\r\n                (this.logoutUrl.indexOf('?') > -1 ? '&' : '?') +\r\n                params.toString();\r\n        }\r\n        this.config.openUri(logoutUrl);\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public createAndSaveNonce(): Promise<string> {\r\n        const that = this;\r\n        return this.createNonce().then(function (nonce: any) {\r\n            that._storage.setItem('nonce', nonce);\r\n            return nonce;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public ngOnDestroy(): void {\r\n        this.clearAccessTokenTimer();\r\n        this.clearIdTokenTimer();\r\n\r\n        this.removeSilentRefreshEventListener();\r\n        const silentRefreshFrame = document.getElementById(this.silentRefreshIFrameName);\r\n        if (silentRefreshFrame) {\r\n            silentRefreshFrame.remove();\r\n        }\r\n\r\n        this.stopSessionCheckTimer();\r\n        this.removeSessionCheckEventListener();\r\n        const sessionCheckFrame = document.getElementById(this.sessionCheckIFrameName);\r\n        if (sessionCheckFrame) {\r\n            sessionCheckFrame.remove();\r\n        }\r\n    }\r\n\r\n    protected createNonce(): Promise<string> {\r\n        return new Promise((resolve) => {\r\n            if (this.rngUrl) {\r\n                throw new Error(\r\n                    'createNonce with rng-web-api has not been implemented so far'\r\n                );\r\n            }\r\n\r\n            /*\r\n             * This alphabet is from:\r\n             * https://tools.ietf.org/html/rfc7636#section-4.1\r\n             *\r\n             * [A-Z] / [a-z] / [0-9] / \"-\" / \".\" / \"_\" / \"~\"\r\n             */\r\n            const unreserved = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\r\n            let size = 45;\r\n            let id = '';\r\n\r\n            const crypto = typeof self === 'undefined' ? null : (self.crypto || self['msCrypto']);\r\n            if (crypto) {\r\n                let bytes = new Uint8Array(size);\r\n                crypto.getRandomValues(bytes);\r\n                bytes = bytes.map(x => unreserved.charCodeAt(x % unreserved.length));\r\n                id = String.fromCharCode.apply(null, bytes);\r\n            } else {\r\n                while (0 < size--) {\r\n                    id += unreserved[Math.random() * unreserved.length | 0];\r\n                }\r\n            }\r\n\r\n            resolve(base64UrlEncode(id));\r\n        });\r\n    }\r\n\r\n    protected async checkAtHash(params: ValidationParams): Promise<boolean> {\r\n        if (!this.tokenValidationHandler) {\r\n            this.logger.warn(\r\n                'No tokenValidationHandler configured. Cannot check at_hash.'\r\n            );\r\n            return true;\r\n        }\r\n        return this.tokenValidationHandler.validateAtHash(params);\r\n    }\r\n\r\n    protected checkSignature(params: ValidationParams): Promise<any> {\r\n        if (!this.tokenValidationHandler) {\r\n            this.logger.warn(\r\n                'No tokenValidationHandler configured. Cannot check signature.'\r\n            );\r\n            return Promise.resolve(null);\r\n        }\r\n        return this.tokenValidationHandler.validateSignature(params);\r\n    }\r\n\r\n\r\n    /**\r\n     * Start the implicit flow or the code flow,\r\n     * depending on your configuration.\r\n     */\r\n    public initLoginFlow(\r\n        additionalState = '',\r\n        params = {}\r\n    ): void {\r\n        if (this.responseType === 'code') {\r\n            return this.initCodeFlow(additionalState, params);\r\n        } else {\r\n            return this.initImplicitFlow(additionalState, params);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Starts the authorization code flow and redirects to user to\r\n     * the auth servers login url.\r\n     */\r\n    public initCodeFlow(\r\n        additionalState = '',\r\n        params = {}\r\n    ): void {\r\n        if (this.loginUrl !== '') {\r\n            this.initCodeFlowInternal(additionalState, params);\r\n        } else {\r\n            this.events.pipe(filter(e => e.type === 'discovery_document_loaded'))\r\n                .subscribe(_ => this.initCodeFlowInternal(additionalState, params));\r\n        }\r\n    }\r\n\r\n    private initCodeFlowInternal(\r\n        additionalState = '',\r\n        params = {}\r\n    ): void {\r\n\r\n        if (!this.validateUrlForHttps(this.loginUrl)) {\r\n            throw new Error('loginUrl  must use HTTPS (with TLS), or config value for property \\'requireHttps\\' must be set to \\'false\\' and allow HTTP (without TLS).');\r\n        }\r\n\r\n        this.createLoginUrl(additionalState, '', null, false, params)\r\n            .then(this.config.openUri)\r\n            .catch(error => {\r\n                console.error('Error in initAuthorizationCodeFlow');\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    protected async createChallangeVerifierPairForPKCE(): Promise<[string, string]> {\r\n\r\n        if (!this.crypto) {\r\n            throw new Error('PKCI support for code flow needs a CryptoHander. Did you import the OAuthModule using forRoot() ?');\r\n        }\r\n\r\n\r\n        const verifier = await this.createNonce();\r\n        const challengeRaw = await this.crypto.calcHash(verifier, 'sha-256');\r\n        const challange = base64UrlEncode(challengeRaw);\r\n\r\n        return [challange, verifier];\r\n    }\r\n}\r\n","export abstract class OAuthModuleConfig {\r\n  resourceServer: OAuthResourceServerConfig;\r\n}\r\n\r\nexport abstract class OAuthResourceServerConfig {\r\n  /**\r\n   * Urls for which calls should be intercepted.\r\n   * If there is an ResourceServerErrorHandler registered, it is used for them.\r\n   * If sendAccessToken is set to true, the access_token is send to them too.\r\n   */\r\n  allowedUrls?: Array<string>;\r\n  sendAccessToken: boolean;\r\n  customUrlValidation?: (url: string) => boolean;\r\n}\r\n","import { HttpResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\n\r\nexport abstract class OAuthResourceServerErrorHandler {\r\n  abstract handleError(err: HttpResponse<any>): Observable<any>;\r\n}\r\n\r\nexport class OAuthNoopResourceServerErrorHandler\r\n  implements OAuthResourceServerErrorHandler {\r\n  handleError(err: HttpResponse<any>): Observable<any> {\r\n    return throwError(err);\r\n  }\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\n\r\nimport {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Observable, of, merge } from 'rxjs';\r\nimport { catchError, filter, map, take, mergeMap, timeout } from 'rxjs/operators';\r\nimport { OAuthResourceServerErrorHandler } from './resource-server-error-handler';\r\nimport { OAuthModuleConfig } from '../oauth-module.config';\r\nimport { OAuthStorage } from '../types';\r\nimport { OAuthService } from '../oauth-service';\r\n\r\n@Injectable()\r\nexport class DefaultOAuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n        private authStorage: OAuthStorage,\r\n        private oAuthService: OAuthService,\r\n        private errorHandler: OAuthResourceServerErrorHandler,\r\n        @Optional() private moduleConfig: OAuthModuleConfig\r\n    ) { }\r\n\r\n    private checkUrl(url: string): boolean {\r\n        if (this.moduleConfig.resourceServer.customUrlValidation) {\r\n            return this.moduleConfig.resourceServer.customUrlValidation(url);\r\n        }\r\n\r\n        if (this.moduleConfig.resourceServer.allowedUrls) {\r\n            return !!this.moduleConfig.resourceServer.allowedUrls.find(u => url.startsWith(u));\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n  public intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const url = req.url.toLowerCase();\r\n\r\n\r\n    if (!this.moduleConfig || !this.moduleConfig.resourceServer || !this.checkUrl(url)) {\r\n      return next.handle(req);\r\n    }\r\n\r\n    const sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;\r\n\r\n    if (!sendAccessToken) {\r\n      return next\r\n        .handle(req)\r\n        .pipe(catchError(err => this.errorHandler.handleError(err)));\r\n    }\r\n\r\n    return merge(\r\n      of(this.oAuthService.getAccessToken()).pipe(\r\n        filter(token => token ? true : false),\r\n      ),\r\n      this.oAuthService.events.pipe(\r\n        filter(e => e.type === 'token_received'),\r\n        timeout(this.oAuthService.waitForTokenInMsec || 0),\r\n        catchError(_ => of(null)), // timeout is not an error\r\n        map(_ => this.oAuthService.getAccessToken()),\r\n      ),\r\n    ).pipe(\r\n      take(1),\r\n      mergeMap(token => {\r\n        if (token) {\r\n          const header = 'Bearer ' + token;\r\n          const headers = req.headers.set('Authorization', header);\r\n          req = req.clone({ headers });\r\n        }\r\n\r\n        return next\r\n          .handle(req)\r\n          .pipe(catchError(err => this.errorHandler.handleError(err)));\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { ValidationHandler, ValidationParams } from './validation-handler';\r\n\r\n/**\r\n * A validation handler that isn't validating nothing.\r\n * Can be used to skip validation (at your own risk).\r\n */\r\nexport class NullValidationHandler implements ValidationHandler {\r\n  validateSignature(validationParams: ValidationParams): Promise<any> {\r\n    return Promise.resolve(null);\r\n  }\r\n  validateAtHash(validationParams: ValidationParams): Promise<boolean> {\r\n    return Promise.resolve(true);\r\n  }\r\n}\r\n","import { MemoryStorage } from './types';\r\n\r\nexport function createDefaultLogger() {\r\n    return console;\r\n}\r\n\r\nexport function createDefaultStorage() {\r\n    return typeof sessionStorage !== 'undefined' ? sessionStorage : new MemoryStorage();\r\n}","import { OAuthStorage, OAuthLogger } from './types';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { OAuthService } from './oauth-service';\r\nimport { UrlHelperService } from './url-helper.service';\r\n\r\nimport { OAuthModuleConfig } from './oauth-module.config';\r\nimport {\r\n  OAuthResourceServerErrorHandler,\r\n  OAuthNoopResourceServerErrorHandler\r\n} from './interceptors/resource-server-error-handler';\r\nimport { DefaultOAuthInterceptor } from './interceptors/default-oauth.interceptor';\r\nimport { ValidationHandler } from './token-validation/validation-handler';\r\nimport { NullValidationHandler } from './token-validation/null-validation-handler';\r\nimport { createDefaultLogger, createDefaultStorage } from './factories';\r\nimport { HashHandler, DefaultHashHandler } from './token-validation/hash-handler';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [],\r\n  exports: []\r\n})\r\nexport class OAuthModule {\r\n  static forRoot(\r\n    config: OAuthModuleConfig = null,\r\n    validationHandlerClass = NullValidationHandler\r\n  ): ModuleWithProviders<OAuthModule> {\r\n    return {\r\n      ngModule: OAuthModule,\r\n      providers: [\r\n        OAuthService,\r\n        UrlHelperService,\r\n        { provide: OAuthLogger, useFactory: createDefaultLogger },\r\n        { provide: OAuthStorage, useFactory: createDefaultStorage },\r\n        { provide: ValidationHandler, useClass: validationHandlerClass},\r\n        { provide: HashHandler, useClass: DefaultHashHandler },\r\n        {\r\n          provide: OAuthResourceServerErrorHandler,\r\n          useClass: OAuthNoopResourceServerErrorHandler\r\n        },\r\n        { provide: OAuthModuleConfig, useValue: config },\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: DefaultOAuthInterceptor,\r\n          multi: true\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { NullValidationHandler } from './null-validation-handler';\r\n\r\nconst err = `PLEASE READ THIS CAREFULLY:\r\n\r\nBeginning with angular-oauth2-oidc version 9, the JwksValidationHandler\r\nhas been moved to an library of its own. If you need it for implementing\r\nOAuth2/OIDC **implicit flow**, please install it using npm:\r\n\r\n  npm i angular-oauth2-oidc-jwks --save\r\n\r\nAfter that, you can import it into your application:\r\n\r\n  import { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';\r\n\r\nPlease note, that this dependency is not needed for the **code flow**,\r\nwhich is nowadays the **recommented** one for single page applications.\r\nThis also results in smaller bundle sizes.\r\n`;\r\n\r\n/**\r\n * This is just a dummy of the JwksValidationHandler\r\n * telling the users that the real one has been moved\r\n * to an library of its own, namely angular-oauth2-oidc-utils\r\n */\r\nexport class JwksValidationHandler extends NullValidationHandler {\r\n\r\n  constructor() {\r\n    super();\r\n    console.error(err);\r\n  }\r\n\r\n}","import { InjectionToken } from '@angular/core';\r\nimport { AuthConfig } from './auth.config';\r\n\r\nexport const AUTH_CONFIG = new InjectionToken<AuthConfig>('AUTH_CONFIG');\r\n"],"names":["Injectable","tslib_1.__extends","tslib_1.__values","Subject","filter","tap","debounceTime","of","delay","HttpHeaders","HttpParams","switchMap","from","map","first","race","tslib_1.__read","tslib_1.__param","Optional","NgZone","HttpClient","throwError","catchError","merge","timeout","take","mergeMap","HTTP_INTERCEPTORS","NgModule","CommonModule","InjectionToken"],"mappings":"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"}